document.querySelector('mutation-test-report-app').report = {"files":{"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\StatisticsScreen\\reducer.test.ts":{"language":"typescript","mutants":[{"id":"0","location":{"end":{"column":19,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"2","location":{"end":{"column":6,"line":8},"start":{"column":19,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"3","location":{"end":{"column":22,"line":5},"start":{"column":20,"line":5}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"1","location":{"end":{"column":2,"line":31},"start":{"column":27,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"4","location":{"end":{"column":20,"line":6},"start":{"column":18,"line":6}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"6","location":{"end":{"column":41,"line":10},"start":{"column":8,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"5","location":{"end":{"column":32,"line":7},"start":{"column":30,"line":7}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"7","location":{"end":{"column":6,"line":16},"start":{"column":49,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"8","location":{"end":{"column":67,"line":11},"start":{"column":55,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"9","location":{"end":{"column":10,"line":15},"start":{"column":79,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"10","location":{"end":{"column":36,"line":12},"start":{"column":24,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"11","location":{"end":{"column":24,"line":13},"start":{"column":22,"line":13}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"12","location":{"end":{"column":36,"line":14},"start":{"column":34,"line":14}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"13","location":{"end":{"column":39,"line":17},"start":{"column":8,"line":17}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"14","location":{"end":{"column":6,"line":23},"start":{"column":47,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"15","location":{"end":{"column":65,"line":18},"start":{"column":53,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"16","location":{"end":{"column":10,"line":22},"start":{"column":77,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"17","location":{"end":{"column":26,"line":19},"start":{"column":24,"line":19}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"18","location":{"end":{"column":34,"line":20},"start":{"column":22,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"19","location":{"end":{"column":36,"line":21},"start":{"column":34,"line":21}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"20","location":{"end":{"column":51,"line":24},"start":{"column":8,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"21","location":{"end":{"column":6,"line":30},"start":{"column":59,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"22","location":{"end":{"column":72,"line":25},"start":{"column":65,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"25","location":{"end":{"column":24,"line":27},"start":{"column":22,"line":27}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"26","location":{"end":{"column":41,"line":28},"start":{"column":34,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"23","location":{"end":{"column":10,"line":29},"start":{"column":84,"line":25}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"24","location":{"end":{"column":26,"line":26},"start":{"column":24,"line":26}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"}],"source":"import { actions, reducer } from './reducer';\r\n\r\ndescribe('reducer', () => {\r\n    const state = {\r\n        startDate: '',\r\n        endDate: '',\r\n        statisticsIndicator: '',\r\n    };\r\n\r\n    it('should handle UPDATE_START_DATE', () => {\r\n        expect(reducer(state, actions.updateStartDate('25.08.2020'))).toEqual({\r\n            startDate: '25.08.2020',\r\n            endDate: '',\r\n            statisticsIndicator: '',\r\n        });\r\n    });\r\n    it('should handle UPDATE_END_DATE', () => {\r\n        expect(reducer(state, actions.updateEndDate('25.08.2020'))).toEqual({\r\n            startDate: '',\r\n            endDate: '25.08.2020',\r\n            statisticsIndicator: '',\r\n        });\r\n    });\r\n    it('should handle UPDATE_STATISTICS_INDICATOR', () => {\r\n        expect(reducer(state, actions.updateStatisticsIndicator('total'))).toEqual({\r\n            startDate: '',\r\n            endDate: '',\r\n            statisticsIndicator: 'total',\r\n        });\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\StatisticsScreen\\reducer.ts":{"language":"typescript","mutants":[{"id":"27","location":{"end":{"column":2,"line":13},"start":{"column":46,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"28","location":{"end":{"column":18,"line":10},"start":{"column":16,"line":10}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"29","location":{"end":{"column":16,"line":11},"start":{"column":14,"line":11}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"30","location":{"end":{"column":28,"line":12},"start":{"column":26,"line":12}},"mutatorName":"StringLiteral","replacement":"\"Stryker was here!\"","status":"Survived"},{"id":"32","location":{"end":{"column":23,"line":16},"start":{"column":11,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"31","location":{"end":{"column":2,"line":29},"start":{"column":44,"line":15}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"33","location":{"end":{"column":6,"line":28},"start":{"column":15,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"34","location":{"end":{"column":10,"line":21},"start":{"column":73,"line":19}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"35","location":{"end":{"column":10,"line":24},"start":{"column":71,"line":22}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"36","location":{"end":{"column":10,"line":27},"start":{"column":83,"line":25}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type StatisticsState = {\r\n    startDate: string;\r\n    endDate: string;\r\n    statisticsIndicator: string;\r\n};\r\n\r\nexport const initialState: StatisticsState = {\r\n    startDate: '',\r\n    endDate: '',\r\n    statisticsIndicator: '',\r\n};\r\n\r\nexport const StatisticsSlice = createSlice({\r\n    name: 'statistics',\r\n    initialState,\r\n    reducers: {\r\n        updateStartDate: (state, { payload }: PayloadAction<string>) => {\r\n            state.startDate = payload;\r\n        },\r\n        updateEndDate: (state, { payload }: PayloadAction<string>) => {\r\n            state.endDate = payload;\r\n        },\r\n        updateStatisticsIndicator: (state, { payload }: PayloadAction<string>) => {\r\n            state.statisticsIndicator = payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { reducer, actions } = StatisticsSlice;\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\TariffsScreen\\reducer.test.ts":{"language":"typescript","mutants":[{"id":"37","location":{"end":{"column":19,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"38","location":{"end":{"column":2,"line":49},"start":{"column":27,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"39","location":{"end":{"column":6,"line":10},"start":{"column":31,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"40","location":{"end":{"column":22,"line":6},"start":{"column":16,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"41","location":{"end":{"column":26,"line":9},"start":{"column":21,"line":9}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"43","location":{"end":{"column":26,"line":13},"start":{"column":16,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"42","location":{"end":{"column":6,"line":17},"start":{"column":35,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"44","location":{"end":{"column":25,"line":16},"start":{"column":21,"line":16}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"45","location":{"end":{"column":34,"line":19},"start":{"column":19,"line":19}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"46","location":{"end":{"column":34,"line":21},"start":{"column":8,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"47","location":{"end":{"column":6,"line":23},"start":{"column":42,"line":21}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"49","location":{"end":{"column":37,"line":24},"start":{"column":8,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"48","location":{"end":{"column":90,"line":22},"start":{"column":64,"line":22}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"51","location":{"end":{"column":73,"line":25},"start":{"column":71,"line":25}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"50","location":{"end":{"column":6,"line":26},"start":{"column":45,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"52","location":{"end":{"column":35,"line":27},"start":{"column":8,"line":27}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"53","location":{"end":{"column":6,"line":48},"start":{"column":43,"line":27}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"55","location":{"end":{"column":36,"line":33},"start":{"column":28,"line":33}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"54","location":{"end":{"column":18,"line":37},"start":{"column":30,"line":31}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"56","location":{"end":{"column":38,"line":36},"start":{"column":33,"line":36}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"58","location":{"end":{"column":14,"line":46},"start":{"column":13,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"57","location":{"end":{"column":10,"line":47},"start":{"column":19,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"59","location":{"end":{"column":32,"line":42},"start":{"column":24,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"60","location":{"end":{"column":34,"line":45},"start":{"column":29,"line":45}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { actions, reducer, Tariff } from './reducer';\r\n\r\ndescribe('reducer', () => {\r\n    const newTariff: Tariff = {\r\n        id: 1,\r\n        title: 'test',\r\n        cost: 5,\r\n        maxCost: 1000,\r\n        isDuration: false,\r\n    };\r\n    const initialTariff: Tariff = {\r\n        id: 1,\r\n        title: '2,5р/мин',\r\n        cost: 2.5,\r\n        maxCost: 600,\r\n        isDuration: true,\r\n    };\r\n\r\n    const state = [initialTariff];\r\n\r\n    it('should handle TARIFF_ADD', () => {\r\n        expect(reducer(state, actions.add(newTariff))).toEqual([initialTariff, newTariff]);\r\n    });\r\n    it('should handle TARIFF_DELETE', () => {\r\n        expect(reducer(state, actions.delete(initialTariff))).toEqual([]);\r\n    });\r\n    it('should handle TARIFF_EDIT', () => {\r\n        expect(\r\n            reducer(\r\n                state,\r\n                actions.edit({\r\n                    id: 1,\r\n                    title: '4р/мин',\r\n                    cost: 4,\r\n                    maxCost: 1000,\r\n                    isDuration: false,\r\n                }),\r\n            ),\r\n        ).toEqual([\r\n            {\r\n                id: 1,\r\n                title: '4р/мин',\r\n                cost: 4,\r\n                maxCost: 1000,\r\n                isDuration: false,\r\n            },\r\n        ]);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\TariffsScreen\\reducer.ts":{"language":"typescript","mutants":[{"id":"61","location":{"end":{"column":2,"line":40},"start":{"column":39,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"62","location":{"end":{"column":6,"line":18},"start":{"column":5,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"63","location":{"end":{"column":26,"line":14},"start":{"column":16,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"64","location":{"end":{"column":25,"line":17},"start":{"column":21,"line":17}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"66","location":{"end":{"column":36,"line":21},"start":{"column":16,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"67","location":{"end":{"column":26,"line":24},"start":{"column":21,"line":24}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"65","location":{"end":{"column":6,"line":25},"start":{"column":5,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"68","location":{"end":{"column":6,"line":32},"start":{"column":5,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"70","location":{"end":{"column":26,"line":31},"start":{"column":21,"line":31}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"69","location":{"end":{"column":35,"line":28},"start":{"column":16,"line":28}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"71","location":{"end":{"column":6,"line":39},"start":{"column":5,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"73","location":{"end":{"column":26,"line":38},"start":{"column":21,"line":38}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"72","location":{"end":{"column":25,"line":35},"start":{"column":16,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"75","location":{"end":{"column":20,"line":43},"start":{"column":11,"line":43}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"74","location":{"end":{"column":2,"line":63},"start":{"column":41,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"77","location":{"end":{"column":10,"line":54},"start":{"column":14,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"76","location":{"end":{"column":6,"line":62},"start":{"column":15,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"78","location":{"end":{"column":14,"line":50},"start":{"column":42,"line":47}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"79","location":{"end":{"column":43,"line":49},"start":{"column":24,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"81","location":{"end":{"column":10,"line":58},"start":{"column":62,"line":55}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"80","location":{"end":{"column":14,"line":53},"start":{"column":69,"line":51}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"84","location":{"end":{"column":85,"line":56},"start":{"column":61,"line":56}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"82","location":{"end":{"column":85,"line":56},"start":{"column":49,"line":56}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"83","location":{"end":{"column":85,"line":56},"start":{"column":61,"line":56}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"86","location":{"end":{"column":10,"line":61},"start":{"column":64,"line":59}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"90","location":{"end":{"column":58,"line":60},"start":{"column":55,"line":60}},"mutatorName":"EqualityOperator","replacement":"===","status":"Survived"},{"id":"88","location":{"end":{"column":69,"line":60},"start":{"column":45,"line":60}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"89","location":{"end":{"column":69,"line":60},"start":{"column":45,"line":60}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"85","location":{"end":{"column":74,"line":56},"start":{"column":71,"line":56}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"87","location":{"end":{"column":69,"line":60},"start":{"column":33,"line":60}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"}],"source":"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type Tariff = {\r\n    id: number;\r\n    title: string;\r\n    cost: number;\r\n    maxCost: number;\r\n    isDuration: boolean;\r\n};\r\n\r\nexport const initialState: Tariff[] = [\r\n    {\r\n        id: 1,\r\n        title: '2,5р/мин',\r\n        cost: 2.5,\r\n        maxCost: 600,\r\n        isDuration: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Ночефка без буфета',\r\n        cost: 0,\r\n        maxCost: 400,\r\n        isDuration: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Ночефка с буфетом',\r\n        cost: 0,\r\n        maxCost: 600,\r\n        isDuration: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'OneGame',\r\n        cost: 0,\r\n        maxCost: 100,\r\n        isDuration: false,\r\n    },\r\n];\r\n\r\nexport const TariffsSlice = createSlice({\r\n    name: 'tariffs',\r\n    initialState,\r\n    reducers: {\r\n        add: {\r\n            prepare: (tariff: Tariff) => {\r\n                tariff.id = Date.now();\r\n                return { payload: tariff };\r\n            },\r\n            reducer: (state, { payload }: PayloadAction<Tariff>) => {\r\n                state.push(payload);\r\n            },\r\n        },\r\n        edit: (state, { payload }: PayloadAction<Tariff>) => {\r\n            const indexTariff = state.findIndex((tariff) => tariff.id === payload.id);\r\n            state[indexTariff] = payload;\r\n        },\r\n        delete: (state, { payload }: PayloadAction<Tariff>) => {\r\n            return state.filter((tariff) => tariff.id !== payload.id);\r\n        },\r\n    },\r\n});\r\n\r\nexport const { reducer, actions } = TariffsSlice;\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\VisitorsScreen\\reducer.test.ts":{"language":"typescript","mutants":[{"id":"91","location":{"end":{"column":19,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"93","location":{"end":{"column":6,"line":10},"start":{"column":33,"line":4}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"92","location":{"end":{"column":2,"line":497},"start":{"column":27,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"95","location":{"end":{"column":69,"line":9},"start":{"column":16,"line":9}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"94","location":{"end":{"column":21,"line":6},"start":{"column":15,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"96","location":{"end":{"column":68,"line":9},"start":{"column":17,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"99","location":{"end":{"column":69,"line":16},"start":{"column":16,"line":16}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"97","location":{"end":{"column":6,"line":17},"start":{"column":37,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"98","location":{"end":{"column":22,"line":13},"start":{"column":15,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"100","location":{"end":{"column":68,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"101","location":{"end":{"column":6,"line":29},"start":{"column":34,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"103","location":{"end":{"column":28,"line":21},"start":{"column":26,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"102","location":{"end":{"column":35,"line":20},"start":{"column":19,"line":20}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"105","location":{"end":{"column":31,"line":23},"start":{"column":26,"line":23}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"104","location":{"end":{"column":10,"line":25},"start":{"column":17,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"106","location":{"end":{"column":35,"line":24},"start":{"column":30,"line":24}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"108","location":{"end":{"column":35,"line":31},"start":{"column":8,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"109","location":{"end":{"column":6,"line":43},"start":{"column":43,"line":31}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"110","location":{"end":{"column":10,"line":42},"start":{"column":65,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"112","location":{"end":{"column":30,"line":34},"start":{"column":28,"line":34}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"107","location":{"end":{"column":26,"line":27},"start":{"column":24,"line":27}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"111","location":{"end":{"column":51,"line":33},"start":{"column":23,"line":33}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"114","location":{"end":{"column":14,"line":40},"start":{"column":21,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"113","location":{"end":{"column":32,"line":36},"start":{"column":30,"line":36}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"115","location":{"end":{"column":35,"line":38},"start":{"column":30,"line":38}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"116","location":{"end":{"column":39,"line":39},"start":{"column":34,"line":39}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"117","location":{"end":{"column":38,"line":45},"start":{"column":8,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"120","location":{"end":{"column":25,"line":47},"start":{"column":23,"line":47}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"122","location":{"end":{"column":14,"line":54},"start":{"column":21,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"118","location":{"end":{"column":6,"line":57},"start":{"column":46,"line":45}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"123","location":{"end":{"column":35,"line":52},"start":{"column":30,"line":52}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"121","location":{"end":{"column":32,"line":50},"start":{"column":30,"line":50}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"119","location":{"end":{"column":10,"line":56},"start":{"column":72,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"125","location":{"end":{"column":30,"line":55},"start":{"column":28,"line":55}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"124","location":{"end":{"column":39,"line":53},"start":{"column":34,"line":53}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"128","location":{"end":{"column":18,"line":68},"start":{"column":30,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"127","location":{"end":{"column":6,"line":89},"start":{"column":44,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"126","location":{"end":{"column":36,"line":58},"start":{"column":8,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"129","location":{"end":{"column":36,"line":64},"start":{"column":27,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"131","location":{"end":{"column":80,"line":67},"start":{"column":29,"line":67}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"132","location":{"end":{"column":10,"line":88},"start":{"column":19,"line":70}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"130","location":{"end":{"column":81,"line":67},"start":{"column":28,"line":67}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"134","location":{"end":{"column":18,"line":78},"start":{"column":17,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"135","location":{"end":{"column":36,"line":74},"start":{"column":27,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"133","location":{"end":{"column":14,"line":79},"start":{"column":23,"line":71}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"136","location":{"end":{"column":81,"line":77},"start":{"column":28,"line":77}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"138","location":{"end":{"column":14,"line":83},"start":{"column":21,"line":80}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"141","location":{"end":{"column":32,"line":84},"start":{"column":30,"line":84}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"137","location":{"end":{"column":80,"line":77},"start":{"column":29,"line":77}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"142","location":{"end":{"column":30,"line":86},"start":{"column":28,"line":86}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"139","location":{"end":{"column":35,"line":81},"start":{"column":30,"line":81}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"143","location":{"end":{"column":37,"line":90},"start":{"column":8,"line":90}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"145","location":{"end":{"column":88,"line":94},"start":{"column":31,"line":94}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"140","location":{"end":{"column":39,"line":82},"start":{"column":34,"line":82}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"144","location":{"end":{"column":6,"line":118},"start":{"column":45,"line":90}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"147","location":{"end":{"column":14,"line":108},"start":{"column":23,"line":97}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"146","location":{"end":{"column":10,"line":117},"start":{"column":19,"line":96}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"148","location":{"end":{"column":18,"line":107},"start":{"column":17,"line":98}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"149","location":{"end":{"column":34,"line":100},"start":{"column":27,"line":100}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"152","location":{"end":{"column":75,"line":105},"start":{"column":25,"line":105}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"151","location":{"end":{"column":76,"line":104},"start":{"column":25,"line":104}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"153","location":{"end":{"column":14,"line":112},"start":{"column":21,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"150","location":{"end":{"column":22,"line":106},"start":{"column":28,"line":103}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"154","location":{"end":{"column":35,"line":110},"start":{"column":30,"line":110}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"155","location":{"end":{"column":39,"line":111},"start":{"column":34,"line":111}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"156","location":{"end":{"column":32,"line":113},"start":{"column":30,"line":113}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"159","location":{"end":{"column":6,"line":179},"start":{"column":55,"line":119}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"157","location":{"end":{"column":30,"line":115},"start":{"column":28,"line":115}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"160","location":{"end":{"column":18,"line":148},"start":{"column":17,"line":122}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"158","location":{"end":{"column":47,"line":119},"start":{"column":8,"line":119}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"161","location":{"end":{"column":22,"line":139},"start":{"column":31,"line":123}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"164","location":{"end":{"column":89,"line":130},"start":{"column":36,"line":130}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"163","location":{"end":{"column":44,"line":127},"start":{"column":35,"line":127}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"165","location":{"end":{"column":88,"line":130},"start":{"column":37,"line":130}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"166","location":{"end":{"column":26,"line":138},"start":{"column":25,"line":132}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"168","location":{"end":{"column":89,"line":137},"start":{"column":36,"line":137}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"167","location":{"end":{"column":44,"line":134},"start":{"column":35,"line":134}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"169","location":{"end":{"column":88,"line":137},"start":{"column":37,"line":137}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"172","location":{"end":{"column":43,"line":142},"start":{"column":38,"line":142}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"171","location":{"end":{"column":22,"line":144},"start":{"column":29,"line":141}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"173","location":{"end":{"column":47,"line":143},"start":{"column":42,"line":143}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"174","location":{"end":{"column":38,"line":146},"start":{"column":36,"line":146}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"175","location":{"end":{"column":18,"line":158},"start":{"column":40,"line":149}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"176","location":{"end":{"column":22,"line":157},"start":{"column":21,"line":151}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"180","location":{"end":{"column":10,"line":178},"start":{"column":19,"line":160}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"177","location":{"end":{"column":40,"line":153},"start":{"column":31,"line":153}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"178","location":{"end":{"column":85,"line":156},"start":{"column":32,"line":156}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"181","location":{"end":{"column":14,"line":169},"start":{"column":23,"line":161}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"179","location":{"end":{"column":84,"line":156},"start":{"column":33,"line":156}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"182","location":{"end":{"column":18,"line":168},"start":{"column":17,"line":162}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"184","location":{"end":{"column":81,"line":167},"start":{"column":28,"line":167}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"183","location":{"end":{"column":36,"line":164},"start":{"column":27,"line":164}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"186","location":{"end":{"column":32,"line":170},"start":{"column":30,"line":170}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"185","location":{"end":{"column":80,"line":167},"start":{"column":29,"line":167}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"187","location":{"end":{"column":14,"line":174},"start":{"column":21,"line":171}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"188","location":{"end":{"column":35,"line":172},"start":{"column":30,"line":172}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"190","location":{"end":{"column":30,"line":176},"start":{"column":28,"line":176}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"189","location":{"end":{"column":39,"line":173},"start":{"column":34,"line":173}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"193","location":{"end":{"column":18,"line":209},"start":{"column":17,"line":183}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"191","location":{"end":{"column":44,"line":180},"start":{"column":8,"line":180}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"192","location":{"end":{"column":6,"line":263},"start":{"column":52,"line":180}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"194","location":{"end":{"column":22,"line":200},"start":{"column":31,"line":184}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"195","location":{"end":{"column":26,"line":192},"start":{"column":25,"line":186}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"196","location":{"end":{"column":44,"line":188},"start":{"column":35,"line":188}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"198","location":{"end":{"column":88,"line":191},"start":{"column":37,"line":191}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"199","location":{"end":{"column":26,"line":199},"start":{"column":25,"line":193}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"197","location":{"end":{"column":89,"line":191},"start":{"column":36,"line":191}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"202","location":{"end":{"column":88,"line":198},"start":{"column":37,"line":198}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"201","location":{"end":{"column":89,"line":198},"start":{"column":36,"line":198}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"205","location":{"end":{"column":43,"line":203},"start":{"column":38,"line":203}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"204","location":{"end":{"column":22,"line":205},"start":{"column":29,"line":202}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"200","location":{"end":{"column":44,"line":195},"start":{"column":35,"line":195}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"203","location":{"end":{"column":40,"line":201},"start":{"column":38,"line":201}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"209","location":{"end":{"column":22,"line":220},"start":{"column":31,"line":211}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"206","location":{"end":{"column":47,"line":204},"start":{"column":42,"line":204}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"211","location":{"end":{"column":44,"line":215},"start":{"column":35,"line":215}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"207","location":{"end":{"column":38,"line":207},"start":{"column":36,"line":207}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"210","location":{"end":{"column":26,"line":219},"start":{"column":25,"line":213}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"208","location":{"end":{"column":18,"line":222},"start":{"column":37,"line":210}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"213","location":{"end":{"column":88,"line":218},"start":{"column":37,"line":218}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"215","location":{"end":{"column":14,"line":253},"start":{"column":23,"line":225}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"212","location":{"end":{"column":89,"line":218},"start":{"column":36,"line":218}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"214","location":{"end":{"column":10,"line":262},"start":{"column":19,"line":224}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"217","location":{"end":{"column":34,"line":228},"start":{"column":27,"line":228}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"218","location":{"end":{"column":22,"line":234},"start":{"column":28,"line":231}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"216","location":{"end":{"column":18,"line":235},"start":{"column":17,"line":226}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"219","location":{"end":{"column":76,"line":232},"start":{"column":25,"line":232}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"220","location":{"end":{"column":78,"line":233},"start":{"column":25,"line":233}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"221","location":{"end":{"column":18,"line":242},"start":{"column":17,"line":236}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"222","location":{"end":{"column":36,"line":238},"start":{"column":27,"line":238}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"223","location":{"end":{"column":81,"line":241},"start":{"column":28,"line":241}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"224","location":{"end":{"column":80,"line":241},"start":{"column":29,"line":241}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"226","location":{"end":{"column":36,"line":245},"start":{"column":27,"line":245}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"225","location":{"end":{"column":18,"line":252},"start":{"column":17,"line":243}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"227","location":{"end":{"column":22,"line":251},"start":{"column":28,"line":248}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"231","location":{"end":{"column":14,"line":258},"start":{"column":21,"line":255}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"230","location":{"end":{"column":32,"line":254},"start":{"column":30,"line":254}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"228","location":{"end":{"column":76,"line":249},"start":{"column":25,"line":249}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"229","location":{"end":{"column":78,"line":250},"start":{"column":25,"line":250}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"233","location":{"end":{"column":39,"line":257},"start":{"column":34,"line":257}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"232","location":{"end":{"column":35,"line":256},"start":{"column":30,"line":256}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"235","location":{"end":{"column":44,"line":264},"start":{"column":8,"line":264}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"237","location":{"end":{"column":18,"line":293},"start":{"column":17,"line":267}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"234","location":{"end":{"column":30,"line":259},"start":{"column":28,"line":259}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"238","location":{"end":{"column":22,"line":284},"start":{"column":31,"line":268}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"239","location":{"end":{"column":26,"line":276},"start":{"column":25,"line":270}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"236","location":{"end":{"column":6,"line":323},"start":{"column":52,"line":264}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"240","location":{"end":{"column":44,"line":272},"start":{"column":35,"line":272}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"241","location":{"end":{"column":89,"line":275},"start":{"column":36,"line":275}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"242","location":{"end":{"column":88,"line":275},"start":{"column":37,"line":275}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"170","location":{"end":{"column":40,"line":140},"start":{"column":38,"line":140}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"244","location":{"end":{"column":44,"line":279},"start":{"column":35,"line":279}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"243","location":{"end":{"column":26,"line":283},"start":{"column":25,"line":277}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"246","location":{"end":{"column":88,"line":282},"start":{"column":37,"line":282}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"248","location":{"end":{"column":22,"line":289},"start":{"column":29,"line":286}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"162","location":{"end":{"column":26,"line":131},"start":{"column":25,"line":125}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"249","location":{"end":{"column":43,"line":287},"start":{"column":38,"line":287}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"245","location":{"end":{"column":89,"line":282},"start":{"column":36,"line":282}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"250","location":{"end":{"column":47,"line":288},"start":{"column":42,"line":288}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"253","location":{"end":{"column":25,"line":297},"start":{"column":23,"line":297}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"247","location":{"end":{"column":40,"line":285},"start":{"column":38,"line":285}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"251","location":{"end":{"column":38,"line":291},"start":{"column":36,"line":291}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"254","location":{"end":{"column":14,"line":314},"start":{"column":30,"line":298}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"257","location":{"end":{"column":81,"line":305},"start":{"column":28,"line":305}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"252","location":{"end":{"column":10,"line":322},"start":{"column":19,"line":296}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"258","location":{"end":{"column":80,"line":305},"start":{"column":29,"line":305}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"255","location":{"end":{"column":18,"line":306},"start":{"column":17,"line":300}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"256","location":{"end":{"column":36,"line":302},"start":{"column":27,"line":302}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"260","location":{"end":{"column":36,"line":309},"start":{"column":27,"line":309}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"261","location":{"end":{"column":81,"line":312},"start":{"column":28,"line":312}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"259","location":{"end":{"column":18,"line":313},"start":{"column":17,"line":307}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"262","location":{"end":{"column":80,"line":312},"start":{"column":29,"line":312}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"263","location":{"end":{"column":14,"line":318},"start":{"column":21,"line":315}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"264","location":{"end":{"column":35,"line":316},"start":{"column":30,"line":316}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"266","location":{"end":{"column":30,"line":319},"start":{"column":28,"line":319}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"265","location":{"end":{"column":39,"line":317},"start":{"column":34,"line":317}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"267","location":{"end":{"column":46,"line":324},"start":{"column":8,"line":324}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"269","location":{"end":{"column":18,"line":352},"start":{"column":17,"line":327}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"268","location":{"end":{"column":6,"line":366},"start":{"column":54,"line":324}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"270","location":{"end":{"column":47,"line":328},"start":{"column":31,"line":328}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"272","location":{"end":{"column":26,"line":336},"start":{"column":25,"line":330}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"271","location":{"end":{"column":22,"line":344},"start":{"column":38,"line":329}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"274","location":{"end":{"column":89,"line":335},"start":{"column":36,"line":335}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"273","location":{"end":{"column":44,"line":332},"start":{"column":35,"line":332}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"275","location":{"end":{"column":88,"line":335},"start":{"column":37,"line":335}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"277","location":{"end":{"column":44,"line":339},"start":{"column":35,"line":339}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"279","location":{"end":{"column":88,"line":342},"start":{"column":37,"line":342}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"280","location":{"end":{"column":22,"line":348},"start":{"column":29,"line":345}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"281","location":{"end":{"column":43,"line":346},"start":{"column":38,"line":346}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"278","location":{"end":{"column":89,"line":342},"start":{"column":36,"line":342}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"276","location":{"end":{"column":26,"line":343},"start":{"column":25,"line":337}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"283","location":{"end":{"column":38,"line":350},"start":{"column":36,"line":350}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"282","location":{"end":{"column":47,"line":347},"start":{"column":42,"line":347}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"285","location":{"end":{"column":39,"line":356},"start":{"column":23,"line":356}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"284","location":{"end":{"column":10,"line":365},"start":{"column":19,"line":355}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"288","location":{"end":{"column":35,"line":359},"start":{"column":30,"line":359}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"289","location":{"end":{"column":39,"line":360},"start":{"column":34,"line":360}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"286","location":{"end":{"column":32,"line":357},"start":{"column":30,"line":357}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"287","location":{"end":{"column":14,"line":361},"start":{"column":21,"line":358}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"290","location":{"end":{"column":30,"line":362},"start":{"column":28,"line":362}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"291","location":{"end":{"column":49,"line":367},"start":{"column":8,"line":367}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"292","location":{"end":{"column":6,"line":379},"start":{"column":57,"line":367}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"296","location":{"end":{"column":32,"line":370},"start":{"column":30,"line":370}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"294","location":{"end":{"column":10,"line":378},"start":{"column":70,"line":368}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"295","location":{"end":{"column":39,"line":369},"start":{"column":23,"line":369}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"293","location":{"end":{"column":58,"line":368},"start":{"column":54,"line":368}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"298","location":{"end":{"column":34,"line":372},"start":{"column":30,"line":372}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"299","location":{"end":{"column":39,"line":373},"start":{"column":34,"line":373}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"297","location":{"end":{"column":14,"line":374},"start":{"column":21,"line":371}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"302","location":{"end":{"column":6,"line":392},"start":{"column":57,"line":380}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"300","location":{"end":{"column":30,"line":376},"start":{"column":28,"line":376}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"303","location":{"end":{"column":62,"line":381},"start":{"column":58,"line":381}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"304","location":{"end":{"column":10,"line":391},"start":{"column":74,"line":381}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"301","location":{"end":{"column":49,"line":380},"start":{"column":8,"line":380}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"307","location":{"end":{"column":14,"line":387},"start":{"column":21,"line":384}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"306","location":{"end":{"column":32,"line":383},"start":{"column":30,"line":383}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"310","location":{"end":{"column":30,"line":389},"start":{"column":28,"line":389}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"308","location":{"end":{"column":35,"line":385},"start":{"column":30,"line":385}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"305","location":{"end":{"column":39,"line":382},"start":{"column":23,"line":382}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"309","location":{"end":{"column":38,"line":386},"start":{"column":34,"line":386}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"311","location":{"end":{"column":39,"line":393},"start":{"column":8,"line":393}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"313","location":{"end":{"column":10,"line":404},"start":{"column":69,"line":394}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"312","location":{"end":{"column":6,"line":405},"start":{"column":47,"line":393}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"315","location":{"end":{"column":14,"line":399},"start":{"column":21,"line":396}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"316","location":{"end":{"column":35,"line":397},"start":{"column":30,"line":397}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"317","location":{"end":{"column":39,"line":398},"start":{"column":34,"line":398}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"314","location":{"end":{"column":39,"line":395},"start":{"column":23,"line":395}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"319","location":{"end":{"column":32,"line":403},"start":{"column":30,"line":403}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"318","location":{"end":{"column":30,"line":401},"start":{"column":28,"line":401}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"321","location":{"end":{"column":6,"line":483},"start":{"column":50,"line":406}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"322","location":{"end":{"column":18,"line":435},"start":{"column":17,"line":409}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"325","location":{"end":{"column":44,"line":414},"start":{"column":35,"line":414}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"323","location":{"end":{"column":22,"line":426},"start":{"column":31,"line":410}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"326","location":{"end":{"column":89,"line":417},"start":{"column":36,"line":417}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"320","location":{"end":{"column":42,"line":406},"start":{"column":8,"line":406}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"327","location":{"end":{"column":88,"line":417},"start":{"column":37,"line":417}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"324","location":{"end":{"column":26,"line":418},"start":{"column":25,"line":412}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"331","location":{"end":{"column":88,"line":424},"start":{"column":37,"line":424}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"330","location":{"end":{"column":89,"line":424},"start":{"column":36,"line":424}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"328","location":{"end":{"column":26,"line":425},"start":{"column":25,"line":419}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"333","location":{"end":{"column":22,"line":431},"start":{"column":29,"line":428}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"329","location":{"end":{"column":44,"line":421},"start":{"column":35,"line":421}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"332","location":{"end":{"column":40,"line":427},"start":{"column":38,"line":427}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"334","location":{"end":{"column":43,"line":429},"start":{"column":38,"line":429}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"335","location":{"end":{"column":47,"line":430},"start":{"column":42,"line":430}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"336","location":{"end":{"column":38,"line":433},"start":{"column":36,"line":433}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"337","location":{"end":{"column":18,"line":445},"start":{"column":42,"line":436}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"338","location":{"end":{"column":22,"line":444},"start":{"column":21,"line":438}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"339","location":{"end":{"column":40,"line":440},"start":{"column":31,"line":440}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"342","location":{"end":{"column":10,"line":482},"start":{"column":19,"line":447}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"341","location":{"end":{"column":84,"line":443},"start":{"column":33,"line":443}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"340","location":{"end":{"column":85,"line":443},"start":{"column":32,"line":443}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"343","location":{"end":{"column":14,"line":464},"start":{"column":23,"line":448}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"344","location":{"end":{"column":18,"line":456},"start":{"column":17,"line":450}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"345","location":{"end":{"column":36,"line":452},"start":{"column":27,"line":452}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"347","location":{"end":{"column":80,"line":455},"start":{"column":29,"line":455}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"350","location":{"end":{"column":81,"line":462},"start":{"column":28,"line":462}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"348","location":{"end":{"column":18,"line":463},"start":{"column":17,"line":457}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"346","location":{"end":{"column":81,"line":455},"start":{"column":28,"line":455}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"351","location":{"end":{"column":80,"line":462},"start":{"column":29,"line":462}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"349","location":{"end":{"column":36,"line":459},"start":{"column":27,"line":459}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"353","location":{"end":{"column":14,"line":470},"start":{"column":21,"line":467}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"352","location":{"end":{"column":32,"line":465},"start":{"column":30,"line":465}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"355","location":{"end":{"column":39,"line":469},"start":{"column":34,"line":469}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"357","location":{"end":{"column":18,"line":479},"start":{"column":17,"line":473}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"356","location":{"end":{"column":14,"line":480},"start":{"column":28,"line":471}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"358","location":{"end":{"column":36,"line":475},"start":{"column":27,"line":475}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"359","location":{"end":{"column":81,"line":478},"start":{"column":28,"line":478}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"354","location":{"end":{"column":35,"line":468},"start":{"column":30,"line":468}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"360","location":{"end":{"column":80,"line":478},"start":{"column":29,"line":478}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"361","location":{"end":{"column":36,"line":484},"start":{"column":8,"line":484}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"364","location":{"end":{"column":39,"line":486},"start":{"column":23,"line":486}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"365","location":{"end":{"column":32,"line":487},"start":{"column":30,"line":487}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"363","location":{"end":{"column":10,"line":495},"start":{"column":64,"line":485}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"362","location":{"end":{"column":6,"line":496},"start":{"column":44,"line":484}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"367","location":{"end":{"column":35,"line":489},"start":{"column":30,"line":489}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"366","location":{"end":{"column":14,"line":491},"start":{"column":21,"line":488}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"369","location":{"end":{"column":30,"line":493},"start":{"column":28,"line":493}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"368","location":{"end":{"column":39,"line":490},"start":{"column":34,"line":490}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { actions, reducer, Status, Visitor, VisitorsState } from './reducer';\r\n\r\ndescribe('reducer', () => {\r\n    const newVisitor: Visitor = {\r\n        id: 22,\r\n        name: 'test',\r\n        tariffId: 2,\r\n        status: Status.active,\r\n        times: [{ timestamp: 1597246825795, status: Status.active }],\r\n    };\r\n    const initialVisitor: Visitor = {\r\n        id: 1,\r\n        name: 'Франц',\r\n        tariffId: 1,\r\n        status: Status.active,\r\n        times: [{ timestamp: 1597246825795, status: Status.active }],\r\n    };\r\n\r\n    const state: VisitorsState = {\r\n        visitors: [initialVisitor],\r\n        historyVisitors: [],\r\n        modals: {\r\n            payVisitors: false,\r\n            historyVisitors: false,\r\n        },\r\n        total: 0,\r\n        payedVisitors: [],\r\n        timer: 0,\r\n    };\r\n\r\n    it('should handle VISITOR_ADD', () => {\r\n        expect(reducer(state, actions.add(newVisitor))).toEqual({\r\n            visitors: [initialVisitor, newVisitor],\r\n            payedVisitors: [],\r\n            timer: 0,\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            total: 0,\r\n        });\r\n    });\r\n\r\n    it('should handle VISITOR_DELETE', () => {\r\n        expect(reducer(state, actions.delete(initialVisitor))).toEqual({\r\n            visitors: [],\r\n            total: 0,\r\n            timer: 0,\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            payedVisitors: [],\r\n        });\r\n    });\r\n    it('should handle VISITOR_EDIT', () => {\r\n        expect(\r\n            reducer(\r\n                state,\r\n                actions.edit({\r\n                    id: 1,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.finished,\r\n                    times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                }),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.finished,\r\n                    times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                },\r\n            ],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            historyVisitors: [],\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle VISITOR_EVENT', () => {\r\n        expect(\r\n            reducer(\r\n                state,\r\n                actions.event({ timestamp: 1597246826000, status: Status.pause, id: 1 }),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Франц',\r\n                    tariffId: 1,\r\n                    status: Status.pause,\r\n                    times: [\r\n                        { timestamp: 1597246825795, status: Status.active },\r\n                        { timestamp: 1597246826000, status: Status.pause },\r\n                    ],\r\n                },\r\n            ],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            historyVisitors: [],\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle VISITOR_SELECTED_DELETE', () => {\r\n        expect(\r\n            reducer(\r\n                {\r\n                    visitors: [\r\n                        initialVisitor,\r\n                        {\r\n                            id: 2,\r\n                            name: 'Франц 1',\r\n                            tariffId: 2,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                        },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    historyVisitors: [],\r\n                    modals: {\r\n                        payVisitors: false,\r\n                        historyVisitors: false,\r\n                    },\r\n                    total: 0,\r\n                    payedVisitors: [],\r\n                    timer: 0,\r\n                },\r\n                actions.selectedDelete([\r\n                    initialVisitor,\r\n                    {\r\n                        id: 3,\r\n                        name: 'Франц 2',\r\n                        tariffId: 3,\r\n                        status: Status.active,\r\n                        times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                    },\r\n                ]),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [\r\n                {\r\n                    id: 2,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                },\r\n            ],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle VISITOR_SELECTED_PAY', () => {\r\n        expect(\r\n            reducer(\r\n                {\r\n                    visitors: [\r\n                        initialVisitor,\r\n                        {\r\n                            id: 2,\r\n                            name: 'Франц 1',\r\n                            tariffId: 2,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                        },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    historyVisitors: [],\r\n                    modals: {\r\n                        payVisitors: false,\r\n                        historyVisitors: false,\r\n                    },\r\n                    total: 0,\r\n                    payedVisitors: [],\r\n                    timer: 0,\r\n                },\r\n                actions.selectedPay({\r\n                    visitors: [\r\n                        initialVisitor,\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    timestamp: 1111111111111,\r\n                }),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Франц',\r\n                    tariffId: 1,\r\n                    status: Status.finished,\r\n                    times: [\r\n                        { timestamp: 1597246825795, status: Status.active },\r\n                        { timestamp: 1111111111111, status: Status.finished },\r\n                    ],\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Франц 2',\r\n                    tariffId: 3,\r\n                    status: Status.finished,\r\n                    times: [\r\n                        { timestamp: 1597246825795, status: Status.active },\r\n                        { timestamp: 1111111111111, status: Status.finished },\r\n                    ],\r\n                },\r\n            ],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            payedVisitors: [],\r\n            total: 0,\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle VISITORS_HISTORY_PUT', () => {\r\n        expect(\r\n            reducer(\r\n                {\r\n                    visitors: [\r\n                        initialVisitor,\r\n                        {\r\n                            id: 2,\r\n                            name: 'Франц 1',\r\n                            tariffId: 2,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                        },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    historyVisitors: [],\r\n                    modals: {\r\n                        payVisitors: false,\r\n                        historyVisitors: false,\r\n                    },\r\n                    total: 0,\r\n                    payedVisitors: [],\r\n                    timer: 0,\r\n                },\r\n                actions.historyPut(),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [],\r\n            historyVisitors: [\r\n                initialVisitor,\r\n                {\r\n                    id: 2,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Франц 2',\r\n                    tariffId: 3,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                },\r\n            ],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            payedVisitors: [],\r\n            total: 0,\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle VISITORS_HISTORY_CLEAN', () => {\r\n        expect(\r\n            reducer(\r\n                {\r\n                    visitors: [initialVisitor],\r\n                    historyVisitors: [\r\n                        {\r\n                            id: 2,\r\n                            name: 'Франц 1',\r\n                            tariffId: 2,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                        },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    modals: {\r\n                        payVisitors: false,\r\n                        historyVisitors: false,\r\n                    },\r\n                    total: 0,\r\n                    payedVisitors: [],\r\n                    timer: 0,\r\n                },\r\n                actions.historyClean,\r\n            ),\r\n        ).toEqual({\r\n            visitors: [initialVisitor],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            payedVisitors: [],\r\n            total: 0,\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle MODAL_PAY_VISITORS_TOGGLE', () => {\r\n        expect(reducer(state, actions.modalPayToggle(true))).toEqual({\r\n            visitors: [initialVisitor],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: true,\r\n                historyVisitors: false,\r\n            },\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle MODAL_PAY_VISITORS_TOGGLE', () => {\r\n        expect(reducer(state, actions.modalHistoryToggle(true))).toEqual({\r\n            visitors: [initialVisitor],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: true,\r\n            },\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle TOTAL_CALCULATE', () => {\r\n        expect(reducer(state, actions.totalCalculate(400))).toEqual({\r\n            visitors: [initialVisitor],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            total: 400,\r\n            payedVisitors: [],\r\n            timer: 0,\r\n            historyVisitors: [],\r\n        });\r\n    });\r\n    it('should handle PAYED_VISITORS_SET', () => {\r\n        expect(\r\n            reducer(\r\n                {\r\n                    visitors: [\r\n                        initialVisitor,\r\n                        {\r\n                            id: 2,\r\n                            name: 'Франц 1',\r\n                            tariffId: 2,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                        },\r\n                        {\r\n                            id: 3,\r\n                            name: 'Франц 2',\r\n                            tariffId: 3,\r\n                            status: Status.active,\r\n                            times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                        },\r\n                    ],\r\n                    historyVisitors: [],\r\n                    modals: {\r\n                        payVisitors: false,\r\n                        historyVisitors: false,\r\n                    },\r\n                    total: 0,\r\n                    payedVisitors: [],\r\n                    timer: 0,\r\n                },\r\n                actions.payedVisitorsSet([\r\n                    initialVisitor,\r\n                    {\r\n                        id: 3,\r\n                        name: 'Франц 2',\r\n                        tariffId: 3,\r\n                        status: Status.active,\r\n                        times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                    },\r\n                ]),\r\n            ),\r\n        ).toEqual({\r\n            visitors: [\r\n                initialVisitor,\r\n                {\r\n                    id: 2,\r\n                    name: 'Франц 1',\r\n                    tariffId: 2,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246822295, status: Status.active }],\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: 'Франц 2',\r\n                    tariffId: 3,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                },\r\n            ],\r\n            historyVisitors: [],\r\n            total: 0,\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            payedVisitors: [\r\n                initialVisitor,\r\n                {\r\n                    id: 3,\r\n                    name: 'Франц 2',\r\n                    tariffId: 3,\r\n                    status: Status.active,\r\n                    times: [{ timestamp: 1597246825795, status: Status.active }],\r\n                },\r\n            ],\r\n            timer: 0,\r\n        });\r\n    });\r\n    it('should handle TIMER_UPDATE', () => {\r\n        expect(reducer(state, actions.timerUpdate(1))).toEqual({\r\n            visitors: [initialVisitor],\r\n            historyVisitors: [],\r\n            modals: {\r\n                payVisitors: false,\r\n                historyVisitors: false,\r\n            },\r\n            total: 0,\r\n            payedVisitors: [],\r\n            timer: 1,\r\n        });\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\screens\\VisitorsScreen\\reducer.ts":{"language":"typescript","mutants":[{"id":"372","location":{"end":{"column":10,"line":49},"start":{"column":9,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"371","location":{"end":{"column":6,"line":50},"start":{"column":15,"line":39}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"370","location":{"end":{"column":2,"line":130},"start":{"column":44,"line":38}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"374","location":{"end":{"column":14,"line":48},"start":{"column":20,"line":45}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"373","location":{"end":{"column":26,"line":42},"start":{"column":19,"line":42}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"377","location":{"end":{"column":6,"line":122},"start":{"column":22,"line":51}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"375","location":{"end":{"column":68,"line":46},"start":{"column":17,"line":46}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"376","location":{"end":{"column":70,"line":47},"start":{"column":17,"line":47}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"379","location":{"end":{"column":26,"line":54},"start":{"column":19,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"381","location":{"end":{"column":68,"line":58},"start":{"column":17,"line":58}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"382","location":{"end":{"column":70,"line":59},"start":{"column":17,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"378","location":{"end":{"column":10,"line":61},"start":{"column":9,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"380","location":{"end":{"column":14,"line":60},"start":{"column":20,"line":57}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"384","location":{"end":{"column":28,"line":64},"start":{"column":19,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"383","location":{"end":{"column":10,"line":71},"start":{"column":9,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"386","location":{"end":{"column":68,"line":68},"start":{"column":17,"line":68}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"388","location":{"end":{"column":10,"line":81},"start":{"column":9,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"385","location":{"end":{"column":14,"line":70},"start":{"column":20,"line":67}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"387","location":{"end":{"column":70,"line":69},"start":{"column":17,"line":69}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"389","location":{"end":{"column":28,"line":74},"start":{"column":19,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"395","location":{"end":{"column":14,"line":90},"start":{"column":20,"line":87}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"391","location":{"end":{"column":68,"line":78},"start":{"column":17,"line":78}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"393","location":{"end":{"column":10,"line":91},"start":{"column":9,"line":82}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"390","location":{"end":{"column":14,"line":80},"start":{"column":20,"line":77}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"394","location":{"end":{"column":28,"line":84},"start":{"column":19,"line":84}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"396","location":{"end":{"column":68,"line":88},"start":{"column":17,"line":88}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"397","location":{"end":{"column":70,"line":89},"start":{"column":17,"line":89}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"400","location":{"end":{"column":14,"line":100},"start":{"column":20,"line":97}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"401","location":{"end":{"column":68,"line":98},"start":{"column":17,"line":98}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"399","location":{"end":{"column":28,"line":94},"start":{"column":19,"line":94}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"402","location":{"end":{"column":70,"line":99},"start":{"column":17,"line":99}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"398","location":{"end":{"column":10,"line":101},"start":{"column":9,"line":92}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"403","location":{"end":{"column":10,"line":111},"start":{"column":9,"line":102}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"404","location":{"end":{"column":28,"line":104},"start":{"column":19,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"405","location":{"end":{"column":14,"line":110},"start":{"column":20,"line":107}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"406","location":{"end":{"column":68,"line":108},"start":{"column":17,"line":108}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"407","location":{"end":{"column":70,"line":109},"start":{"column":17,"line":109}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"408","location":{"end":{"column":10,"line":121},"start":{"column":9,"line":112}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"409","location":{"end":{"column":28,"line":114},"start":{"column":19,"line":114}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"410","location":{"end":{"column":14,"line":120},"start":{"column":20,"line":117}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"411","location":{"end":{"column":68,"line":118},"start":{"column":17,"line":118}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"412","location":{"end":{"column":70,"line":119},"start":{"column":17,"line":119}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"413","location":{"end":{"column":6,"line":126},"start":{"column":13,"line":123}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"414","location":{"end":{"column":27,"line":124},"start":{"column":22,"line":124}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"415","location":{"end":{"column":31,"line":125},"start":{"column":26,"line":125}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"416","location":{"end":{"column":22,"line":128},"start":{"column":20,"line":128}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"392","location":{"end":{"column":70,"line":79},"start":{"column":17,"line":79}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"419","location":{"end":{"column":6,"line":204},"start":{"column":15,"line":135}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"418","location":{"end":{"column":21,"line":133},"start":{"column":11,"line":133}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"417","location":{"end":{"column":2,"line":205},"start":{"column":42,"line":132}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"420","location":{"end":{"column":10,"line":147},"start":{"column":14,"line":136}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"422","location":{"end":{"column":80,"line":141},"start":{"column":33,"line":141}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"421","location":{"end":{"column":14,"line":143},"start":{"column":44,"line":137}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"423","location":{"end":{"column":79,"line":141},"start":{"column":34,"line":141}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"427","location":{"end":{"column":97,"line":149},"start":{"column":59,"line":149}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"425","location":{"end":{"column":14,"line":146},"start":{"column":70,"line":144}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"424","location":{"end":{"column":44,"line":142},"start":{"column":24,"line":142}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"426","location":{"end":{"column":10,"line":151},"start":{"column":63,"line":148}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"429","location":{"end":{"column":97,"line":149},"start":{"column":72,"line":149}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"431","location":{"end":{"column":10,"line":154},"start":{"column":65,"line":152}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"430","location":{"end":{"column":86,"line":149},"start":{"column":83,"line":149}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"428","location":{"end":{"column":97,"line":149},"start":{"column":72,"line":149}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"432","location":{"end":{"column":90,"line":153},"start":{"column":52,"line":153}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"435","location":{"end":{"column":79,"line":153},"start":{"column":76,"line":153}},"mutatorName":"EqualityOperator","replacement":"===","status":"Survived"},{"id":"433","location":{"end":{"column":90,"line":153},"start":{"column":65,"line":153}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"437","location":{"end":{"column":97,"line":156},"start":{"column":59,"line":156}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"436","location":{"end":{"column":10,"line":162},"start":{"column":66,"line":155}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"439","location":{"end":{"column":97,"line":156},"start":{"column":72,"line":156}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"440","location":{"end":{"column":86,"line":156},"start":{"column":83,"line":156}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"441","location":{"end":{"column":14,"line":161},"start":{"column":53,"line":158}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"438","location":{"end":{"column":97,"line":156},"start":{"column":72,"line":156}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"442","location":{"end":{"column":10,"line":167},"start":{"column":75,"line":163}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"434","location":{"end":{"column":90,"line":153},"start":{"column":65,"line":153}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"443","location":{"end":{"column":47,"line":164},"start":{"column":29,"line":164}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"447","location":{"end":{"column":14,"line":166},"start":{"column":54,"line":164}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"446","location":{"end":{"column":52,"line":164},"start":{"column":49,"line":164}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"448","location":{"end":{"column":97,"line":165},"start":{"column":56,"line":165}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"444","location":{"end":{"column":32,"line":164},"start":{"column":31,"line":164}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"445","location":{"end":{"column":32,"line":164},"start":{"column":31,"line":164}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"449","location":{"end":{"column":97,"line":165},"start":{"column":69,"line":165}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"451","location":{"end":{"column":83,"line":165},"start":{"column":80,"line":165}},"mutatorName":"EqualityOperator","replacement":"===","status":"Survived"},{"id":"456","location":{"end":{"column":61,"line":169},"start":{"column":58,"line":169}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"455","location":{"end":{"column":32,"line":169},"start":{"column":31,"line":169}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"454","location":{"end":{"column":32,"line":169},"start":{"column":31,"line":169}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"452","location":{"end":{"column":10,"line":181},"start":{"column":84,"line":168}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"453","location":{"end":{"column":56,"line":169},"start":{"column":29,"line":169}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"450","location":{"end":{"column":97,"line":165},"start":{"column":69,"line":165}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"459","location":{"end":{"column":71,"line":171},"start":{"column":34,"line":171}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"458","location":{"end":{"column":71,"line":171},"start":{"column":21,"line":171}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"457","location":{"end":{"column":14,"line":178},"start":{"column":63,"line":169}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"464","location":{"end":{"column":10,"line":184},"start":{"column":73,"line":182}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"460","location":{"end":{"column":71,"line":171},"start":{"column":34,"line":171}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"461","location":{"end":{"column":48,"line":171},"start":{"column":45,"line":171}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"462","location":{"end":{"column":18,"line":177},"start":{"column":57,"line":174}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"463","location":{"end":{"column":37,"line":180},"start":{"column":35,"line":180}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"466","location":{"end":{"column":10,"line":190},"start":{"column":72,"line":188}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"469","location":{"end":{"column":10,"line":200},"start":{"column":32,"line":197}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"468","location":{"end":{"column":10,"line":196},"start":{"column":69,"line":194}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"467","location":{"end":{"column":10,"line":193},"start":{"column":77,"line":191}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"465","location":{"end":{"column":10,"line":187},"start":{"column":77,"line":185}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"472","location":{"end":{"column":39,"line":202},"start":{"column":37,"line":202}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"471","location":{"end":{"column":10,"line":203},"start":{"column":34,"line":201}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"470","location":{"end":{"column":32,"line":199},"start":{"column":30,"line":199}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"}],"source":"import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nexport enum Status {\n    active,\n    pause,\n    finished,\n}\nexport type Visitor = {\n    id?: number;\n    name: string;\n    tariffId: number;\n    status: Status;\n    times: Array<Event>;\n};\nexport type Event = {\n    timestamp: number;\n    status: Status;\n};\nexport type EventUser = {\n    timestamp: number;\n    status: Status;\n    id?: number;\n};\nexport type VisitorsWithTimestamp = {\n    visitors: Visitor[];\n    timestamp: number;\n};\nexport type VisitorsState = {\n    visitors: Array<Visitor>;\n    historyVisitors: Array<Visitor>;\n    modals: {\n        payVisitors: boolean;\n        historyVisitors: boolean;\n    };\n    total: number;\n    payedVisitors: Array<Visitor>;\n    timer: number;\n};\nexport const initialState: VisitorsState = {\n    visitors: [\n        {\n            id: 0,\n            name: 'Франц',\n            tariffId: 1,\n            status: Status.finished,\n            times: [\n                { timestamp: 1597833600000, status: Status.active },\n                { timestamp: 1597847340000, status: Status.finished },\n            ],\n        },\n    ],\n    historyVisitors: [\n        {\n            id: 1,\n            name: 'Франц',\n            tariffId: 1,\n            status: Status.finished,\n            times: [\n                { timestamp: 1597833600000, status: Status.active },\n                { timestamp: 1597847340000, status: Status.finished },\n            ],\n        },\n        {\n            id: 2,\n            name: 'Франц 2',\n            tariffId: 2,\n            status: Status.finished,\n            times: [\n                { timestamp: 1597836180000, status: Status.active },\n                { timestamp: 1597847340000, status: Status.finished },\n            ],\n        },\n        {\n            id: 3,\n            name: 'Франц 3',\n            tariffId: 3,\n            status: Status.finished,\n            times: [\n                { timestamp: 1597924800000, status: Status.active },\n                { timestamp: 1597938000000, status: Status.finished },\n            ],\n        },\n        {\n            id: 4,\n            name: 'Франц 4',\n            tariffId: 2,\n            status: Status.finished,\n            times: [\n                { timestamp: 1597929600000, status: Status.active },\n                { timestamp: 1597953360000, status: Status.finished },\n            ],\n        },\n        {\n            id: 5,\n            name: 'Франц 5',\n            tariffId: 4,\n            status: Status.finished,\n            times: [\n                { timestamp: 1598098200000, status: Status.active },\n                { timestamp: 1598120400000, status: Status.finished },\n            ],\n        },\n        {\n            id: 6,\n            name: 'Франц 6',\n            tariffId: 1,\n            status: Status.finished,\n            times: [\n                { timestamp: 1598184000000, status: Status.active },\n                { timestamp: 1598209200000, status: Status.finished },\n            ],\n        },\n        {\n            id: 7,\n            name: 'Франц 7',\n            tariffId: 2,\n            status: Status.finished,\n            times: [\n                { timestamp: 1598199600000, status: Status.active },\n                { timestamp: 1598219100000, status: Status.finished },\n            ],\n        },\n    ],\n    modals: {\n        payVisitors: false,\n        historyVisitors: false,\n    },\n    total: 0,\n    payedVisitors: [],\n    timer: 0,\n};\n\nexport const VisitorsSlice = createSlice({\n    name: 'visitors',\n    initialState,\n    reducers: {\n        add: {\n            prepare: (visitor: Visitor) => {\n                const newTime = Date.now();\n                visitor.id = newTime;\n                visitor.status = Status.active;\n                visitor.times = [{ timestamp: newTime, status: Status.active }];\n                return { payload: visitor };\n            },\n            reducer: (state, { payload }: PayloadAction<Visitor>) => {\n                state.visitors.push(payload);\n            },\n        },\n        edit: (state, { payload }: PayloadAction<Visitor>) => {\n            const indexVisitor = state.visitors.findIndex((visitor) => visitor.id === payload.id);\n            state.visitors[indexVisitor] = payload;\n        },\n        delete: (state, { payload }: PayloadAction<Visitor>) => {\n            state.visitors = state.visitors.filter((visitor) => visitor.id !== payload.id);\n        },\n        event: (state, { payload }: PayloadAction<EventUser>) => {\n            const indexVisitor = state.visitors.findIndex((visitor) => visitor.id === payload.id);\n            state.visitors[indexVisitor].status = payload.status;\n            state.visitors[indexVisitor].times.push({\n                timestamp: payload.timestamp,\n                status: payload.status,\n            });\n        },\n        selectedDelete: (state, { payload }: PayloadAction<Visitor[]>) => {\n            for (let i = 0; i < payload.length; i++) {\n                state.visitors = state.visitors.filter((visitor) => visitor.id !== payload[i].id);\n            }\n        },\n        selectedPay: (state, { payload }: PayloadAction<VisitorsWithTimestamp>) => {\n            for (let i = 0; i < payload.visitors.length; i++) {\n                const indexVisitor = state.visitors.findIndex(\n                    (visitor) => visitor.id === payload.visitors[i].id,\n                );\n                state.visitors[indexVisitor].status = Status.finished;\n                state.visitors[indexVisitor].times.push({\n                    timestamp: payload.timestamp,\n                    status: Status.finished,\n                });\n            }\n            state.total = 0;\n            state.payedVisitors = [];\n        },\n        modalPayToggle: (state, { payload }: PayloadAction<boolean>) => {\n            state.modals.payVisitors = payload;\n        },\n        modalHistoryToggle: (state, { payload }: PayloadAction<boolean>) => {\n            state.modals.historyVisitors = payload;\n        },\n        totalCalculate: (state, { payload }: PayloadAction<number>) => {\n            state.total = payload;\n        },\n        payedVisitorsSet: (state, { payload }: PayloadAction<Visitor[]>) => {\n            state.payedVisitors = payload;\n        },\n        timerUpdate: (state, { payload }: PayloadAction<number>) => {\n            state.timer = payload;\n        },\n        historyPut: (state) => {\n            Array.prototype.push.apply(state.historyVisitors, state.visitors);\n            state.visitors = [];\n        },\n        historyClean: (state) => {\n            state.historyVisitors = [];\n        },\n    },\n});\n\nexport const { reducer, actions } = VisitorsSlice;\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\store.ts":{"language":"typescript","mutants":[{"id":"473","location":{"end":{"column":2,"line":28},"start":{"column":33,"line":24}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"476","location":{"end":{"column":28,"line":31},"start":{"column":22,"line":31}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"474","location":{"end":{"column":2,"line":32},"start":{"column":23,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"477","location":{"end":{"column":2,"line":50},"start":{"column":34,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"478","location":{"end":{"column":6,"line":49},"start":{"column":27,"line":41}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"475","location":{"end":{"column":16,"line":30},"start":{"column":10,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"479","location":{"end":{"column":10,"line":47},"start":{"column":42,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"481","location":{"end":{"column":84,"line":45},"start":{"column":33,"line":45}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"483","location":{"end":{"column":56,"line":48},"start":{"column":19,"line":48}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"484","location":{"end":{"column":43,"line":48},"start":{"column":40,"line":48}},"mutatorName":"EqualityOperator","replacement":"===","status":"Survived"},{"id":"482","location":{"end":{"column":56,"line":48},"start":{"column":19,"line":48}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"485","location":{"end":{"column":56,"line":48},"start":{"column":44,"line":48}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"480","location":{"end":{"column":14,"line":46},"start":{"column":32,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport {\r\n    persistReducer,\r\n    persistStore,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist-indexeddb-storage';\r\n\r\nimport {\r\n    VisitorsSlice,\r\n    TariffsSlice,\r\n    StatisticsSlice,\r\n    VisitorsState,\r\n    StatisticsState,\r\n    Tariff,\r\n} from '@/screens';\r\n\r\nconst reducer = combineReducers({\r\n    visitors: VisitorsSlice.reducer,\r\n    tariffs: TariffsSlice.reducer,\r\n    statistics: StatisticsSlice.reducer,\r\n});\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage('myDB'),\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, reducer);\r\n\r\nexport type Store = {\r\n    visitors: VisitorsState;\r\n    tariffs: Tariff[];\r\n    statistics: StatisticsState;\r\n};\r\nexport const createStore = () => {\r\n    return configureStore({\r\n        reducer: persistedReducer,\r\n        middleware: getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n        devTools: process.env.NODE_ENV !== 'production',\r\n    });\r\n};\r\nexport const store = createStore();\r\nexport const persistor = persistStore(store);\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\FormatDate.test.ts":{"language":"typescript","mutants":[{"id":"486","location":{"end":{"column":27,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"487","location":{"end":{"column":2,"line":10},"start":{"column":35,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"492","location":{"end":{"column":6,"line":9},"start":{"column":35,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"488","location":{"end":{"column":27,"line":4},"start":{"column":8,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"491","location":{"end":{"column":27,"line":7},"start":{"column":8,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"490","location":{"end":{"column":67,"line":5},"start":{"column":55,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"493","location":{"end":{"column":46,"line":8},"start":{"column":34,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"489","location":{"end":{"column":6,"line":6},"start":{"column":35,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { timestampToString, stringToTimestamp } from '@/utils/FormatDate';\r\n\r\ndescribe('FormatDate test', () => {\r\n    it('TimeStampToString', () => {\r\n        expect(timestampToString(1598354862000)).toBe('2020-08-25');\r\n    });\r\n    it('StringToTimestamp', () => {\r\n        expect(stringToTimestamp('2020-08-25')).toBe(1598313600000);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\FormatDate.ts":{"language":"typescript","mutants":[{"id":"495","location":{"end":{"column":62,"line":2},"start":{"column":59,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"494","location":{"end":{"column":2,"line":3},"start":{"column":65,"line":1}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"496","location":{"end":{"column":82,"line":2},"start":{"column":79,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"497","location":{"end":{"column":2,"line":6},"start":{"column":60,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"export const timestampToString = (timestamp: number): string => {\r\n    return new Date(timestamp).toLocaleDateString().split('.').reverse().join('-');\r\n};\r\nexport const stringToTimestamp = (date: string): number => {\r\n    return new Date(date).getTime();\r\n};\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateCost.test.ts":{"language":"typescript","mutants":[{"id":"499","location":{"end":{"column":2,"line":19},"start":{"column":38,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"500","location":{"end":{"column":45,"line":4},"start":{"column":8,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"498","location":{"end":{"column":30,"line":3},"start":{"column":10,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"502","location":{"end":{"column":47,"line":5},"start":{"column":43,"line":5}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"501","location":{"end":{"column":6,"line":6},"start":{"column":53,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"504","location":{"end":{"column":6,"line":9},"start":{"column":53,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"509","location":{"end":{"column":46,"line":13},"start":{"column":8,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"505","location":{"end":{"column":47,"line":8},"start":{"column":43,"line":8}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"508","location":{"end":{"column":47,"line":11},"start":{"column":43,"line":11}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"506","location":{"end":{"column":47,"line":10},"start":{"column":8,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"507","location":{"end":{"column":6,"line":12},"start":{"column":55,"line":10}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"503","location":{"end":{"column":45,"line":7},"start":{"column":8,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"510","location":{"end":{"column":6,"line":15},"start":{"column":54,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"511","location":{"end":{"column":48,"line":14},"start":{"column":43,"line":14}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"512","location":{"end":{"column":46,"line":16},"start":{"column":8,"line":16}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"513","location":{"end":{"column":6,"line":18},"start":{"column":54,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"514","location":{"end":{"column":48,"line":17},"start":{"column":43,"line":17}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"}],"source":"import { calculateCost } from '@/utils/calculateCost';\r\n\r\ndescribe('calculateCost test', () => {\r\n    it('isDuration === true, cost < maxCost', () => {\r\n        expect(calculateCost(2, 500, 100, true)).toBe(200);\r\n    });\r\n    it('isDuration === true, cost > maxCost', () => {\r\n        expect(calculateCost(2, 500, 300, true)).toBe(500);\r\n    });\r\n    it('isDuration === true, cost === maxCost', () => {\r\n        expect(calculateCost(2, 400, 200, true)).toBe(400);\r\n    });\r\n    it('isDuration === false, cost < maxCost', () => {\r\n        expect(calculateCost(2, 600, 200, false)).toBe(600);\r\n    });\r\n    it('isDuration === false, cost > maxCost', () => {\r\n        expect(calculateCost(2, 400, 300, false)).toBe(400);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateCost.ts":{"language":"typescript","mutants":[{"id":"515","location":{"end":{"column":2,"line":9},"start":{"column":14,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"516","location":{"end":{"column":25,"line":7},"start":{"column":24,"line":7}},"mutatorName":"ArithmeticOperator","replacement":"/","status":"Survived"},{"id":"517","location":{"end":{"column":41,"line":8},"start":{"column":12,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"518","location":{"end":{"column":41,"line":8},"start":{"column":12,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"520","location":{"end":{"column":41,"line":8},"start":{"column":26,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"521","location":{"end":{"column":41,"line":8},"start":{"column":26,"line":8}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"522","location":{"end":{"column":33,"line":8},"start":{"column":32,"line":8}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"523","location":{"end":{"column":33,"line":8},"start":{"column":32,"line":8}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"519","location":{"end":{"column":25,"line":8},"start":{"column":23,"line":8}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"}],"source":"export const calculateCost = (\r\n    cost: number,\r\n    maxCost: number,\r\n    duration: number,\r\n    isDuration: boolean,\r\n): number => {\r\n    const value = cost * duration;\r\n    return isDuration && value < maxCost ? value : maxCost;\r\n};\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateCostHelper.test.ts":{"language":"typescript","mutants":[{"id":"525","location":{"end":{"column":2,"line":64},"start":{"column":46,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"528","location":{"end":{"column":26,"line":8},"start":{"column":19,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"524","location":{"end":{"column":38,"line":4},"start":{"column":10,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"527","location":{"end":{"column":10,"line":15},"start":{"column":9,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"526","location":{"end":{"column":6,"line":26},"start":{"column":38,"line":5}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"530","location":{"end":{"column":68,"line":12},"start":{"column":17,"line":12}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"534","location":{"end":{"column":14,"line":24},"start":{"column":20,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"532","location":{"end":{"column":10,"line":25},"start":{"column":9,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"531","location":{"end":{"column":67,"line":13},"start":{"column":17,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"529","location":{"end":{"column":14,"line":14},"start":{"column":20,"line":11}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"536","location":{"end":{"column":67,"line":23},"start":{"column":17,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"535","location":{"end":{"column":68,"line":22},"start":{"column":17,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"533","location":{"end":{"column":28,"line":18},"start":{"column":19,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"538","location":{"end":{"column":10,"line":34},"start":{"column":9,"line":28}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"539","location":{"end":{"column":30,"line":30},"start":{"column":20,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"540","location":{"end":{"column":29,"line":33},"start":{"column":25,"line":33}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"537","location":{"end":{"column":6,"line":56},"start":{"column":36,"line":27}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"545","location":{"end":{"column":39,"line":44},"start":{"column":20,"line":44}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"542","location":{"end":{"column":40,"line":37},"start":{"column":20,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"543","location":{"end":{"column":30,"line":40},"start":{"column":25,"line":40}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"544","location":{"end":{"column":10,"line":48},"start":{"column":9,"line":42}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"546","location":{"end":{"column":30,"line":47},"start":{"column":25,"line":47}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"541","location":{"end":{"column":10,"line":41},"start":{"column":9,"line":35}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"548","location":{"end":{"column":29,"line":51},"start":{"column":20,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"549","location":{"end":{"column":30,"line":54},"start":{"column":25,"line":54}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"551","location":{"end":{"column":6,"line":60},"start":{"column":27,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"550","location":{"end":{"column":19,"line":58},"start":{"column":8,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"547","location":{"end":{"column":10,"line":55},"start":{"column":9,"line":49}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"553","location":{"end":{"column":6,"line":63},"start":{"column":32,"line":61}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"552","location":{"end":{"column":24,"line":61},"start":{"column":8,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"}],"source":"import { calculateCostHelper } from './calculateCostHelper';\r\nimport { Status, Tariff, Visitor } from '@/screens';\r\n\r\ndescribe('calculateTariffHelper test', () => {\r\n    const visitors: Array<Visitor> = [\r\n        {\r\n            id: 1,\r\n            name: 'Франц',\r\n            tariffId: 1,\r\n            status: Status.pause,\r\n            times: [\r\n                { timestamp: 1597665600000, status: Status.active },\r\n                { timestamp: 1597666800000, status: Status.pause },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Франц 2',\r\n            tariffId: 2,\r\n            status: Status.pause,\r\n            times: [\r\n                { timestamp: 1597665600000, status: Status.active },\r\n                { timestamp: 1597666800000, status: Status.pause },\r\n            ],\r\n        },\r\n    ];\r\n    const tariffs: Array<Tariff> = [\r\n        {\r\n            id: 1,\r\n            title: '2,5р/мин',\r\n            cost: 2.5,\r\n            maxCost: 600,\r\n            isDuration: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Ночефка без буфета',\r\n            cost: 0,\r\n            maxCost: 400,\r\n            isDuration: false,\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Ночефка с буфетом',\r\n            cost: 0,\r\n            maxCost: 600,\r\n            isDuration: false,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'OneGame',\r\n            cost: 0,\r\n            maxCost: 100,\r\n            isDuration: false,\r\n        },\r\n    ];\r\n\r\n    it('1 visitor', () => {\r\n        expect(calculateCostHelper(visitors[0], tariffs)).toBe(50);\r\n    });\r\n    it('Array visitors', () => {\r\n        expect(calculateCostHelper(visitors, tariffs)).toBe(450);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateCostHelper.ts":{"language":"typescript","mutants":[{"id":"554","location":{"end":{"column":2,"line":22},"start":{"column":91,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"558","location":{"end":{"column":24,"line":8},"start":{"column":23,"line":8}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"557","location":{"end":{"column":24,"line":8},"start":{"column":23,"line":8}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"556","location":{"end":{"column":36,"line":8},"start":{"column":21,"line":8}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"560","location":{"end":{"column":6,"line":20},"start":{"column":43,"line":8}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"559","location":{"end":{"column":41,"line":8},"start":{"column":38,"line":8}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"561","location":{"end":{"column":43,"line":9},"start":{"column":26,"line":9}},"mutatorName":"UnaryOperator","replacement":"-data[i].tariffId","status":"Survived"},{"id":"555","location":{"end":{"column":47,"line":6},"start":{"column":41,"line":6}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"562","location":{"end":{"column":79,"line":10},"start":{"column":45,"line":10}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"563","location":{"end":{"column":79,"line":10},"start":{"column":57,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"566","location":{"end":{"column":76,"line":11},"start":{"column":42,"line":11}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"565","location":{"end":{"column":70,"line":10},"start":{"column":67,"line":10}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"564","location":{"end":{"column":79,"line":10},"start":{"column":57,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"568","location":{"end":{"column":76,"line":11},"start":{"column":54,"line":11}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"569","location":{"end":{"column":67,"line":11},"start":{"column":64,"line":11}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"567","location":{"end":{"column":76,"line":11},"start":{"column":54,"line":11}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"570","location":{"end":{"column":82,"line":12},"start":{"column":48,"line":12}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"572","location":{"end":{"column":82,"line":12},"start":{"column":60,"line":12}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"574","location":{"end":{"column":10,"line":19},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"573","location":{"end":{"column":73,"line":12},"start":{"column":70,"line":12}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"571","location":{"end":{"column":82,"line":12},"start":{"column":60,"line":12}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"575","location":{"end":{"column":10,"line":19},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"}],"source":"import { Tariff, Visitor } from '@/screens';\r\nimport { calculateCost } from '@/utils/calculateCost';\r\nimport { calculateDuration } from '@/utils/calculateDuration';\r\n\r\nexport const calculateCostHelper = (data: Visitor | Visitor[], tariffs: Array<Tariff>) => {\r\n    data = Array.isArray(data) ? data : [data];\r\n    let total = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n        const tariffId = +data[i].tariffId;\r\n        const tariffMaxCost = (tariffs.find((tariff) => tariff.id === tariffId) as Tariff).maxCost;\r\n        const tariffCost = (tariffs.find((tariff) => tariff.id === tariffId) as Tariff).cost;\r\n        const tariffIsDuration = (tariffs.find((tariff) => tariff.id === tariffId) as Tariff)\r\n            .isDuration;\r\n        total += calculateCost(\r\n            tariffCost,\r\n            tariffMaxCost,\r\n            calculateDuration(data[i].times),\r\n            tariffIsDuration,\r\n        );\r\n    }\r\n    return total;\r\n};\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateDuration.test.ts":{"language":"typescript","mutants":[{"id":"576","location":{"end":{"column":34,"line":4},"start":{"column":10,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"577","location":{"end":{"column":2,"line":23},"start":{"column":42,"line":4}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"578","location":{"end":{"column":26,"line":5},"start":{"column":8,"line":5}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"579","location":{"end":{"column":6,"line":12},"start":{"column":34,"line":5}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"580","location":{"end":{"column":14,"line":10},"start":{"column":31,"line":7}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"582","location":{"end":{"column":67,"line":9},"start":{"column":17,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"583","location":{"end":{"column":20,"line":13},"start":{"column":8,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"581","location":{"end":{"column":68,"line":8},"start":{"column":17,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"584","location":{"end":{"column":6,"line":22},"start":{"column":28,"line":13}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"585","location":{"end":{"column":14,"line":20},"start":{"column":31,"line":15}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"586","location":{"end":{"column":68,"line":16},"start":{"column":17,"line":16}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"587","location":{"end":{"column":67,"line":17},"start":{"column":17,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"588","location":{"end":{"column":68,"line":18},"start":{"column":17,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"589","location":{"end":{"column":70,"line":19},"start":{"column":17,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { calculateDuration } from '@/utils/calculateDuration';\r\nimport { Status } from '@/screens';\r\n\r\ndescribe('calculateDuration test', () => {\r\n    it('active and pause', () => {\r\n        expect(\r\n            calculateDuration([\r\n                { timestamp: 1597327200000, status: Status.active },\r\n                { timestamp: 1597328400000, status: Status.pause },\r\n            ]),\r\n        ).toBe(20);\r\n    });\r\n    it('any status', () => {\r\n        expect(\r\n            calculateDuration([\r\n                { timestamp: 1597320000000, status: Status.active },\r\n                { timestamp: 1597320600000, status: Status.pause },\r\n                { timestamp: 1597321500000, status: Status.active },\r\n                { timestamp: 1597322580000, status: Status.finished },\r\n            ]),\r\n        ).toBe(28);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\calculateDuration.ts":{"language":"typescript","mutants":[{"id":"593","location":{"end":{"column":24,"line":6},"start":{"column":23,"line":6}},"mutatorName":"EqualityOperator","replacement":">=","status":"Survived"},{"id":"591","location":{"end":{"column":37,"line":6},"start":{"column":21,"line":6}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"592","location":{"end":{"column":24,"line":6},"start":{"column":23,"line":6}},"mutatorName":"EqualityOperator","replacement":"<=","status":"Survived"},{"id":"596","location":{"end":{"column":46,"line":7},"start":{"column":13,"line":7}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"590","location":{"end":{"column":2,"line":18},"start":{"column":67,"line":3}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"595","location":{"end":{"column":6,"line":13},"start":{"column":44,"line":6}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"594","location":{"end":{"column":42,"line":6},"start":{"column":39,"line":6}},"mutatorName":"UpdateOperator","replacement":"i--","status":"Survived"},{"id":"600","location":{"end":{"column":10,"line":12},"start":{"column":16,"line":9}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"597","location":{"end":{"column":46,"line":7},"start":{"column":13,"line":7}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"602","location":{"end":{"column":51,"line":10},"start":{"column":13,"line":10}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"601","location":{"end":{"column":51,"line":10},"start":{"column":13,"line":10}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"598","location":{"end":{"column":32,"line":7},"start":{"column":29,"line":7}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"599","location":{"end":{"column":10,"line":9},"start":{"column":48,"line":7}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"603","location":{"end":{"column":41,"line":10},"start":{"column":40,"line":10}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"605","location":{"end":{"column":57,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"604","location":{"end":{"column":57,"line":14},"start":{"column":9,"line":14}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"606","location":{"end":{"column":43,"line":14},"start":{"column":40,"line":14}},"mutatorName":"EqualityOperator","replacement":"!==","status":"Survived"},{"id":"608","location":{"end":{"column":6,"line":16},"start":{"column":59,"line":14}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"609","location":{"end":{"column":39,"line":15},"start":{"column":9,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"607","location":{"end":{"column":29,"line":14},"start":{"column":28,"line":14}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"610","location":{"end":{"column":39,"line":15},"start":{"column":9,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"612","location":{"end":{"column":29,"line":17},"start":{"column":28,"line":17}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"611","location":{"end":{"column":29,"line":15},"start":{"column":28,"line":15}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"}],"source":"import { Event, Status } from '@/screens';\r\n\r\nexport const calculateDuration = (times: Array<Event>): number => {\r\n    let time = 0;\r\n    let startMark = 0;\r\n    for (let i = 0; i < times.length; i++) {\r\n        if (times[i].status === Status.active) {\r\n            startMark = times[i].timestamp;\r\n        } else {\r\n            time += times[i].timestamp - startMark;\r\n            startMark = 0;\r\n        }\r\n    }\r\n    if (times[times.length - 1].status === Status.active) {\r\n        time += Date.now() - startMark;\r\n    }\r\n    return Math.floor(time / 60000);\r\n};\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\initialTheme.ts":{"language":"typescript","mutants":[{"id":"613","location":{"end":{"column":7,"line":67},"start":{"column":37,"line":6}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"614","location":{"end":{"column":6,"line":67},"start":{"column":18,"line":7}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"616","location":{"end":{"column":28,"line":9},"start":{"column":22,"line":9}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"615","location":{"end":{"column":10,"line":10},"start":{"column":15,"line":8}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"618","location":{"end":{"column":42,"line":12},"start":{"column":41,"line":12}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"622","location":{"end":{"column":14,"line":16},"start":{"column":71,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"620","location":{"end":{"column":58,"line":13},"start":{"column":51,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"621","location":{"end":{"column":68,"line":13},"start":{"column":60,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"617","location":{"end":{"column":10,"line":17},"start":{"column":17,"line":11}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"619","location":{"end":{"column":69,"line":13},"start":{"column":50,"line":13}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"624","location":{"end":{"column":51,"line":20},"start":{"column":20,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"623","location":{"end":{"column":10,"line":25},"start":{"column":22,"line":18}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"625","location":{"end":{"column":69,"line":21},"start":{"column":50,"line":21}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"627","location":{"end":{"column":68,"line":21},"start":{"column":60,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"629","location":{"end":{"column":10,"line":28},"start":{"column":21,"line":26}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"630","location":{"end":{"column":10,"line":31},"start":{"column":15,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"628","location":{"end":{"column":14,"line":24},"start":{"column":71,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"626","location":{"end":{"column":58,"line":21},"start":{"column":51,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"631","location":{"end":{"column":28,"line":30},"start":{"column":22,"line":30}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"637","location":{"end":{"column":10,"line":54},"start":{"column":22,"line":44}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"633","location":{"end":{"column":33,"line":35},"start":{"column":25,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"632","location":{"end":{"column":10,"line":36},"start":{"column":17,"line":32}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"636","location":{"end":{"column":14,"line":42},"start":{"column":59,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"635","location":{"end":{"column":57,"line":39},"start":{"column":50,"line":39}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"634","location":{"end":{"column":10,"line":43},"start":{"column":21,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"638","location":{"end":{"column":57,"line":45},"start":{"column":50,"line":45}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"639","location":{"end":{"column":14,"line":48},"start":{"column":59,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"641","location":{"end":{"column":38,"line":50},"start":{"column":37,"line":50}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"640","location":{"end":{"column":32,"line":49},"start":{"column":24,"line":49}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"645","location":{"end":{"column":10,"line":61},"start":{"column":18,"line":55}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"644","location":{"end":{"column":42,"line":52},"start":{"column":41,"line":52}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"643","location":{"end":{"column":14,"line":53},"start":{"column":43,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"646","location":{"end":{"column":28,"line":56},"start":{"column":22,"line":56}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"642","location":{"end":{"column":39,"line":51},"start":{"column":35,"line":51}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"648","location":{"end":{"column":39,"line":58},"start":{"column":29,"line":58}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"652","location":{"end":{"column":10,"line":79},"start":{"column":18,"line":72}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"647","location":{"end":{"column":33,"line":57},"start":{"column":25,"line":57}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"650","location":{"end":{"column":30,"line":64},"start":{"column":24,"line":64}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"651","location":{"end":{"column":6,"line":80},"start":{"column":5,"line":71}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"649","location":{"end":{"column":10,"line":66},"start":{"column":18,"line":62}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"653","location":{"end":{"column":14,"line":75},"start":{"column":22,"line":73}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"654","location":{"end":{"column":32,"line":74},"start":{"column":23,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"656","location":{"end":{"column":32,"line":77},"start":{"column":23,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"655","location":{"end":{"column":14,"line":78},"start":{"column":24,"line":76}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"import { createMuiTheme, createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { ruRU } from '@material-ui/core/locale';\n\nexport const drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n        content: {\n            flexGrow: 1,\n            marginTop: '64px',\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\nexport const theme = createMuiTheme(\n    {\n        palette: {\n            primary: {\n                main: '#632264',\n            },\n            secondary: {\n                main: '#f05326',\n            },\n        },\n    },\n    ruRU,\n);\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\localizationMaterialTable.ts":{"language":"typescript","mutants":[{"id":"657","location":{"end":{"column":2,"line":26},"start":{"column":42,"line":1}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"658","location":{"end":{"column":6,"line":5},"start":{"column":14,"line":2}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"659","location":{"end":{"column":46,"line":3},"start":{"column":24,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"660","location":{"end":{"column":35,"line":4},"start":{"column":28,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"661","location":{"end":{"column":6,"line":8},"start":{"column":13,"line":6}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"662","location":{"end":{"column":28,"line":7},"start":{"column":18,"line":7}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"665","location":{"end":{"column":33,"line":11},"start":{"column":24,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"663","location":{"end":{"column":6,"line":22},"start":{"column":11,"line":9}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"666","location":{"end":{"column":37,"line":12},"start":{"column":22,"line":12}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"667","location":{"end":{"column":50,"line":13},"start":{"column":33,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"669","location":{"end":{"column":36,"line":15},"start":{"column":28,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"668","location":{"end":{"column":10,"line":16},"start":{"column":20,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"670","location":{"end":{"column":10,"line":21},"start":{"column":18,"line":17}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"664","location":{"end":{"column":31,"line":10},"start":{"column":21,"line":10}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"673","location":{"end":{"column":37,"line":20},"start":{"column":26,"line":20}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"672","location":{"end":{"column":36,"line":19},"start":{"column":28,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"671","location":{"end":{"column":69,"line":18},"start":{"column":25,"line":18}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"675","location":{"end":{"column":33,"line":24},"start":{"column":26,"line":24}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"674","location":{"end":{"column":6,"line":25},"start":{"column":17,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"}],"source":"export const localizationMaterialTable = {\r\n    toolbar: {\r\n        nRowsSelected: '{0} строк(и) выбраны',\r\n        searchPlaceholder: 'Поиск',\r\n    },\r\n    header: {\r\n        actions: 'Действия',\r\n    },\r\n    body: {\r\n        addTooltip: 'Добавить',\r\n        deleteTooltip: 'Удалить',\r\n        editTooltip: 'Редактировать',\r\n        emptyDataSourceMessage: 'Посетителей нет',\r\n        filterRow: {\r\n            filterTooltip: 'Фильтр',\r\n        },\r\n        editRow: {\r\n            deleteText: 'Вы уверены, что хотите удалить эту строку?',\r\n            cancelTooltip: 'Отмени',\r\n            saveTooltip: 'Сохранить',\r\n        },\r\n    },\r\n    pagination: {\r\n        labelRowsSelect: 'Строк',\r\n    },\r\n};\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\statisticsUtils.test.ts":{"language":"typescript","mutants":[{"id":"677","location":{"end":{"column":2,"line":137},"start":{"column":40,"line":11}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"676","location":{"end":{"column":32,"line":11},"start":{"column":10,"line":11}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"678","location":{"end":{"column":6,"line":43},"start":{"column":38,"line":12}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"679","location":{"end":{"column":10,"line":22},"start":{"column":9,"line":13}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"681","location":{"end":{"column":14,"line":21},"start":{"column":20,"line":18}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"680","location":{"end":{"column":26,"line":15},"start":{"column":19,"line":15}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"683","location":{"end":{"column":70,"line":20},"start":{"column":17,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"684","location":{"end":{"column":10,"line":32},"start":{"column":9,"line":23}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"685","location":{"end":{"column":28,"line":25},"start":{"column":19,"line":25}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"682","location":{"end":{"column":68,"line":19},"start":{"column":17,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"686","location":{"end":{"column":14,"line":31},"start":{"column":20,"line":28}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"688","location":{"end":{"column":70,"line":30},"start":{"column":17,"line":30}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"687","location":{"end":{"column":68,"line":29},"start":{"column":17,"line":29}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"692","location":{"end":{"column":68,"line":39},"start":{"column":17,"line":39}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"691","location":{"end":{"column":14,"line":41},"start":{"column":20,"line":38}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"690","location":{"end":{"column":28,"line":35},"start":{"column":19,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"689","location":{"end":{"column":10,"line":42},"start":{"column":9,"line":33}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"693","location":{"end":{"column":70,"line":40},"start":{"column":17,"line":40}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"694","location":{"end":{"column":6,"line":73},"start":{"column":36,"line":44}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"695","location":{"end":{"column":10,"line":51},"start":{"column":9,"line":45}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"696","location":{"end":{"column":30,"line":47},"start":{"column":20,"line":47}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"699","location":{"end":{"column":40,"line":54},"start":{"column":20,"line":54}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"697","location":{"end":{"column":29,"line":50},"start":{"column":25,"line":50}},"mutatorName":"BooleanLiteral","replacement":"false","status":"Survived"},{"id":"698","location":{"end":{"column":10,"line":58},"start":{"column":9,"line":52}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"700","location":{"end":{"column":30,"line":57},"start":{"column":25,"line":57}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"701","location":{"end":{"column":10,"line":65},"start":{"column":9,"line":59}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"702","location":{"end":{"column":39,"line":61},"start":{"column":20,"line":61}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"705","location":{"end":{"column":29,"line":68},"start":{"column":20,"line":68}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"706","location":{"end":{"column":30,"line":71},"start":{"column":25,"line":71}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"704","location":{"end":{"column":10,"line":72},"start":{"column":9,"line":66}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"707","location":{"end":{"column":39,"line":74},"start":{"column":8,"line":74}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"703","location":{"end":{"column":30,"line":64},"start":{"column":25,"line":64}},"mutatorName":"BooleanLiteral","replacement":"true","status":"Survived"},{"id":"708","location":{"end":{"column":6,"line":76},"start":{"column":47,"line":74}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"709","location":{"end":{"column":37,"line":77},"start":{"column":8,"line":77}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"710","location":{"end":{"column":6,"line":79},"start":{"column":45,"line":77}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"711","location":{"end":{"column":93,"line":78},"start":{"column":80,"line":78}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"714","location":{"end":{"column":82,"line":81},"start":{"column":80,"line":81}},"mutatorName":"ArrayDeclaration","replacement":"[\"Stryker was here\"]","status":"Survived"},{"id":"713","location":{"end":{"column":6,"line":82},"start":{"column":46,"line":80}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"715","location":{"end":{"column":18,"line":83},"start":{"column":8,"line":83}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"712","location":{"end":{"column":38,"line":80},"start":{"column":8,"line":80}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"717","location":{"end":{"column":10,"line":87},"start":{"column":44,"line":84}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"716","location":{"end":{"column":6,"line":88},"start":{"column":26,"line":83}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"719","location":{"end":{"column":40,"line":85},"start":{"column":27,"line":85}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"718","location":{"end":{"column":25,"line":85},"start":{"column":13,"line":85}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"721","location":{"end":{"column":53,"line":86},"start":{"column":27,"line":86}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"720","location":{"end":{"column":25,"line":86},"start":{"column":13,"line":86}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"722","location":{"end":{"column":34,"line":89},"start":{"column":8,"line":89}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"723","location":{"end":{"column":6,"line":100},"start":{"column":42,"line":89}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"725","location":{"end":{"column":14,"line":94},"start":{"column":13,"line":91}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"726","location":{"end":{"column":36,"line":92},"start":{"column":24,"line":92}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"728","location":{"end":{"column":36,"line":96},"start":{"column":24,"line":96}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"727","location":{"end":{"column":14,"line":98},"start":{"column":13,"line":95}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"724","location":{"end":{"column":10,"line":99},"start":{"column":79,"line":90}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"729","location":{"end":{"column":40,"line":101},"start":{"column":8,"line":101}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"730","location":{"end":{"column":6,"line":112},"start":{"column":48,"line":101}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"732","location":{"end":{"column":14,"line":106},"start":{"column":13,"line":103}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"731","location":{"end":{"column":10,"line":111},"start":{"column":85,"line":102}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"733","location":{"end":{"column":36,"line":104},"start":{"column":24,"line":104}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"735","location":{"end":{"column":36,"line":108},"start":{"column":24,"line":108}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"734","location":{"end":{"column":14,"line":110},"start":{"column":13,"line":107}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"736","location":{"end":{"column":44,"line":113},"start":{"column":8,"line":113}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"737","location":{"end":{"column":6,"line":124},"start":{"column":52,"line":113}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"740","location":{"end":{"column":36,"line":116},"start":{"column":24,"line":116}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"739","location":{"end":{"column":14,"line":118},"start":{"column":13,"line":115}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"742","location":{"end":{"column":36,"line":120},"start":{"column":24,"line":120}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"741","location":{"end":{"column":14,"line":122},"start":{"column":13,"line":119}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"738","location":{"end":{"column":10,"line":123},"start":{"column":80,"line":114}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"743","location":{"end":{"column":45,"line":125},"start":{"column":8,"line":125}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"744","location":{"end":{"column":6,"line":136},"start":{"column":53,"line":125}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"746","location":{"end":{"column":14,"line":130},"start":{"column":13,"line":127}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"747","location":{"end":{"column":36,"line":128},"start":{"column":24,"line":128}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"748","location":{"end":{"column":14,"line":134},"start":{"column":13,"line":131}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"749","location":{"end":{"column":36,"line":132},"start":{"column":24,"line":132}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"745","location":{"end":{"column":10,"line":135},"start":{"column":81,"line":126}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"}],"source":"import {\r\n    calculateAverageCostStatistics,\r\n    calculateAverageDurationStatistics,\r\n    calculateQuantityVisitorsStatistics,\r\n    calculateTotalStatistics,\r\n    rankData,\r\n    sortData,\r\n} from './statisticsUtils';\r\nimport { Status, Tariff, Visitor } from '@/screens';\r\n\r\ndescribe('StatisticsUtils test', () => {\r\n    const visitors: Array<Visitor> = [\r\n        {\r\n            id: 1,\r\n            name: 'Франц',\r\n            tariffId: 1,\r\n            status: Status.finished,\r\n            times: [\r\n                { timestamp: 1597246825795, status: Status.active },\r\n                { timestamp: 1597927148000, status: Status.finished },\r\n            ],\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Франц 2',\r\n            tariffId: 2,\r\n            status: Status.finished,\r\n            times: [\r\n                { timestamp: 1597246825795, status: Status.active },\r\n                { timestamp: 1598099948000, status: Status.finished },\r\n            ],\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Франц 3',\r\n            tariffId: 3,\r\n            status: Status.finished,\r\n            times: [\r\n                { timestamp: 1597246825795, status: Status.active },\r\n                { timestamp: 1598099948000, status: Status.finished },\r\n            ],\r\n        },\r\n    ];\r\n    const tariffs: Array<Tariff> = [\r\n        {\r\n            id: 1,\r\n            title: '2,5р/мин',\r\n            cost: 2.5,\r\n            maxCost: 600,\r\n            isDuration: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Ночефка без буфета',\r\n            cost: 0,\r\n            maxCost: 400,\r\n            isDuration: false,\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Ночефка с буфетом',\r\n            cost: 0,\r\n            maxCost: 600,\r\n            isDuration: false,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'OneGame',\r\n            cost: 0,\r\n            maxCost: 100,\r\n            isDuration: false,\r\n        },\r\n    ];\r\n    it('RankDate to Be three elements', () => {\r\n        expect(rankData(visitors, 1597927148000, 1598099948000)).toStrictEqual(visitors);\r\n    });\r\n    it('RankDate to Be one elements', () => {\r\n        expect(rankData(visitors, 1597927148000, 1597927148000)).toStrictEqual([visitors[0]]);\r\n    });\r\n    it('RankDate to Be zero elements', () => {\r\n        expect(rankData(visitors, 1111111111111, 1111111111111)).toStrictEqual([]);\r\n    });\r\n    it('SortData', () => {\r\n        expect(sortData(visitors)).toEqual({\r\n            '2020-08-20': [visitors[0]],\r\n            '2020-08-22': [visitors[1], visitors[2]],\r\n        });\r\n    });\r\n    it('CalculateTotalStatistics', () => {\r\n        expect(calculateTotalStatistics(sortData(visitors), tariffs)).toEqual([\r\n            {\r\n                title: '2020-08-20',\r\n                value: 600,\r\n            },\r\n            {\r\n                title: '2020-08-22',\r\n                value: 1000,\r\n            },\r\n        ]);\r\n    });\r\n    it('calculateAverageCostStatistics', () => {\r\n        expect(calculateAverageCostStatistics(sortData(visitors), tariffs)).toEqual([\r\n            {\r\n                title: '2020-08-20',\r\n                value: 600,\r\n            },\r\n            {\r\n                title: '2020-08-22',\r\n                value: 500,\r\n            },\r\n        ]);\r\n    });\r\n    it('calculateAverageDurationStatistics', () => {\r\n        expect(calculateAverageDurationStatistics(sortData(visitors))).toEqual([\r\n            {\r\n                title: '2020-08-20',\r\n                value: 189,\r\n            },\r\n            {\r\n                title: '2020-08-22',\r\n                value: 237,\r\n            },\r\n        ]);\r\n    });\r\n    it('calculateQuantityVisitorsStatistics', () => {\r\n        expect(calculateQuantityVisitorsStatistics(sortData(visitors))).toEqual([\r\n            {\r\n                title: '2020-08-20',\r\n                value: 1,\r\n            },\r\n            {\r\n                title: '2020-08-22',\r\n                value: 2,\r\n            },\r\n        ]);\r\n    });\r\n});\r\n"},"C:\\Users\\Мария\\Documents\\Web Projects\\Frontier\\src\\utils\\statisticsUtils.ts":{"language":"typescript","mutants":[{"id":"751","location":{"end":{"column":6,"line":20},"start":{"column":34,"line":17}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"753","location":{"end":{"column":70,"line":19},"start":{"column":16,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"750","location":{"end":{"column":2,"line":21},"start":{"column":22,"line":16}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"752","location":{"end":{"column":61,"line":18},"start":{"column":60,"line":18}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"755","location":{"end":{"column":45,"line":19},"start":{"column":43,"line":19}},"mutatorName":"LogicalOperator","replacement":"||","status":"Survived"},{"id":"756","location":{"end":{"column":42,"line":19},"start":{"column":16,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"754","location":{"end":{"column":70,"line":19},"start":{"column":16,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"758","location":{"end":{"column":28,"line":19},"start":{"column":26,"line":19}},"mutatorName":"EqualityOperator","replacement":"<","status":"Survived"},{"id":"760","location":{"end":{"column":70,"line":19},"start":{"column":46,"line":19}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"757","location":{"end":{"column":42,"line":19},"start":{"column":16,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"759","location":{"end":{"column":28,"line":19},"start":{"column":26,"line":19}},"mutatorName":"EqualityOperator","replacement":">","status":"Survived"},{"id":"763","location":{"end":{"column":62,"line":19},"start":{"column":60,"line":19}},"mutatorName":"EqualityOperator","replacement":">","status":"Survived"},{"id":"761","location":{"end":{"column":70,"line":19},"start":{"column":46,"line":19}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"764","location":{"end":{"column":2,"line":33},"start":{"column":63,"line":23}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"765","location":{"end":{"column":6,"line":32},"start":{"column":70,"line":24}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"767","location":{"end":{"column":52,"line":26},"start":{"column":13,"line":26}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Survived"},{"id":"762","location":{"end":{"column":62,"line":19},"start":{"column":60,"line":19}},"mutatorName":"EqualityOperator","replacement":"<","status":"Survived"},{"id":"766","location":{"end":{"column":85,"line":25},"start":{"column":84,"line":25}},"mutatorName":"ArithmeticOperator","replacement":"+","status":"Survived"},{"id":"768","location":{"end":{"column":52,"line":26},"start":{"column":13,"line":26}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Survived"},{"id":"770","location":{"end":{"column":10,"line":28},"start":{"column":54,"line":26}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"772","location":{"end":{"column":50,"line":29},"start":{"column":41,"line":29}},"mutatorName":"ArrayDeclaration","replacement":"[]","status":"Survived"},{"id":"773","location":{"end":{"column":2,"line":45},"start":{"column":29,"line":38}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"769","location":{"end":{"column":42,"line":26},"start":{"column":39,"line":26}},"mutatorName":"EqualityOperator","replacement":"===","status":"Survived"},{"id":"774","location":{"end":{"column":6,"line":44},"start":{"column":51,"line":39}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"775","location":{"end":{"column":10,"line":42},"start":{"column":78,"line":40}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"776","location":{"end":{"column":28,"line":41},"start":{"column":27,"line":41}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"771","location":{"end":{"column":10,"line":30},"start":{"column":16,"line":28}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"777","location":{"end":{"column":44,"line":43},"start":{"column":16,"line":43}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"778","location":{"end":{"column":2,"line":55},"start":{"column":29,"line":49}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"779","location":{"end":{"column":7,"line":54},"start":{"column":22,"line":51}},"mutatorName":"ArrowFunction","replacement":"() => undefined","status":"Survived"},{"id":"780","location":{"end":{"column":6,"line":54},"start":{"column":33,"line":51}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"781","location":{"end":{"column":39,"line":53},"start":{"column":38,"line":53}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"782","location":{"end":{"column":2,"line":63},"start":{"column":96,"line":56}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"783","location":{"end":{"column":6,"line":62},"start":{"column":51,"line":57}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"786","location":{"end":{"column":74,"line":59},"start":{"column":73,"line":59}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"785","location":{"end":{"column":28,"line":59},"start":{"column":27,"line":59}},"mutatorName":"ArithmeticOperator","replacement":"-","status":"Survived"},{"id":"784","location":{"end":{"column":10,"line":60},"start":{"column":78,"line":58}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"791","location":{"end":{"column":44,"line":67},"start":{"column":16,"line":67}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"787","location":{"end":{"column":75,"line":61},"start":{"column":16,"line":61}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Survived"},{"id":"788","location":{"end":{"column":55,"line":61},"start":{"column":54,"line":61}},"mutatorName":"ArithmeticOperator","replacement":"*","status":"Survived"},{"id":"790","location":{"end":{"column":6,"line":68},"start":{"column":51,"line":65}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"},{"id":"789","location":{"end":{"column":2,"line":69},"start":{"column":97,"line":64}},"mutatorName":"BlockStatement","replacement":"{}","status":"Survived"}],"source":"import { Tariff, Visitor } from '@/screens';\r\nimport { timestampToString } from './FormatDate';\r\nimport { calculateCostHelper } from '@/utils/calculateCostHelper';\r\nimport { calculateDuration } from '@/utils/calculateDuration';\r\n\r\ntype SortedData = { [key: string]: Array<Visitor> };\r\n\r\ntype StatisticsData = {\r\n    title: string;\r\n    value: number;\r\n};\r\nexport const rankData = (\r\n    data: Array<Visitor>,\r\n    startDate: number,\r\n    endDate: number,\r\n): Array<Visitor> => {\r\n    return data.filter((item) => {\r\n        const lastTimestamp = item.times[item.times.length - 1].timestamp;\r\n        return startDate <= lastTimestamp && lastTimestamp <= endDate;\r\n    });\r\n};\r\n\r\nexport const sortData = (data: Array<Visitor>): SortedData => {\r\n    return data.reduce((sortedData: SortedData, visitor: Visitor) => {\r\n        const lastTimestamp = timestampToString(visitor.times[visitor.times.length - 1].timestamp);\r\n        if (sortedData[lastTimestamp] !== undefined) {\r\n            sortedData[lastTimestamp].push(visitor);\r\n        } else {\r\n            sortedData[lastTimestamp] = [visitor];\r\n        }\r\n        return sortedData;\r\n    }, {});\r\n};\r\n\r\nexport const calculateTotalStatistics = (\r\n    data: SortedData,\r\n    tariffs: Array<Tariff>,\r\n): Array<StatisticsData> => {\r\n    return Object.keys(data).map((key: string) => {\r\n        const total = data[key].reduce((result: number, visitor: Visitor) => {\r\n            return result + calculateCostHelper(visitor, tariffs);\r\n        }, 0);\r\n        return { title: key, value: total };\r\n    });\r\n};\r\nexport const calculateAverageCostStatistics = (\r\n    data: SortedData,\r\n    tariffs: Array<Tariff>,\r\n): Array<StatisticsData> => {\r\n    const total = calculateTotalStatistics(data, tariffs);\r\n    return total.map((item) => ({\r\n        title: item.title,\r\n        value: Math.round(item.value / data[item.title].length),\r\n    }));\r\n};\r\nexport const calculateAverageDurationStatistics = (data: SortedData): Array<StatisticsData> => {\r\n    return Object.keys(data).map((key: string) => {\r\n        const total = data[key].reduce((result: number, visitor: Visitor) => {\r\n            return result + Math.round(calculateDuration(visitor.times) / 60);\r\n        }, 0);\r\n        return { title: key, value: Math.round(total / data[key].length) };\r\n    });\r\n};\r\nexport const calculateQuantityVisitorsStatistics = (data: SortedData): Array<StatisticsData> => {\r\n    return Object.keys(data).map((key: string) => {\r\n        const total = data[key].length;\r\n        return { title: key, value: total };\r\n    });\r\n};\r\n"}},"schemaVersion":"1.0","thresholds":{"high":80,"low":60,"break":null}};